{"version":3,"sources":["components/Confirm.js","context/FormReducer.js","context/FormContext.js","components/Header.js","components/FormUserDetails.js","components/toteBoxes/EachBox.js","components/toteBoxes/ToteBoxesRow.js","components/FormToteDetails.js","components/bookingControls/TimeOption.js","components/bookingControls/EachBookingComponent.js","components/bookingControls/CalendarControlsWrap.js","components/Scheduling.js","components/AddressFormStep.js","components/constant.js","components/Success.js","components/UserForm.js","App.js","index.js","images/kt_logo_150.png"],"names":["merchantName","FormReducer","state","action","type","securityToken","payload","toteBoxesContent","dropOffObj","pickUpObj","initialState","dayID","routeID","startTime","GlobalContext","React","createContext","FormProvider","props","useReducer","value","dispatch","Provider","children","Header","step","useState","currentStep","setCurrentStep","useEffect","className","href","src","mainLogo","alt","serviceTypeAndZip","FormUserDetails","formData","setFormData","nextStep","franchises","zipCodes","setServiceTypes","serviceTypes","setResetCalendars","serviceAreaValue","useContext","validationSchemaFirstStep","yup","locationType","required","serviceArea","pickUp","positive","integer","validateServideArea","a","error","zipCodeEndPoint","changeFranchise","axios","post","res","data","Zips","validateZipCode","length","zipInteger","zipString","filter","item","zip","franchiseID","zipCodeFilter","title","initialValues","onSubmit","values","zipValueDropOff","zipValuePickUp","locationId","dateDropOff","priceListsEndPoint","get","then","PriceItems","catch","err","console","log","toteBoxesRequest","dropOff","validationSchema","errors","touched","htmlFor","as","name","validate","map","p","key","franchiseName","placeholder","id","EachBox","listClasses","trackKey","dataBox","changeSelectedBox","onClick","week","price","ToteBoxesRow","dataObj","updateSelectedBox","indexActive","selectedBox","setSelectedBox","parent","child","toteBoxes","prices","toteBox","index","sub","additionalWeek","toteBoxesData","bufferObj","FormToteDetails","buttonClasses","prevStep","resetCalendars","direction","setDirection","nextButtonDisabled","setNextButtonDisabled","switchButtons","arrSwitch","forEach","eachElem","push","keyObj","serviceTypesRowLocal","serviceTypesRow","priceBlockSequence","isActive","isOnline","serviceTypesRowLocal2","serviceTypesRowLocal3","serviceTypesRowLocal4","objOrigin","arrToteRows","eachElemLevel1","bufferElem","legend","priceBlock","elem","nameKey","found","findIndex","el","addElement","priceItemView","descriptionHelp","setObjectBeforeRenderRows","promoCodeField","setToteBoxesInfo","toteRow","TimeOption","startAt","endAt","changeSelectedTime","closeCalendar","e","preventDefault","dateAvailable","Date","dateSuggested","theYear","getFullYear","formatedDay","getMonth","dateOptions","weekday","year","month","day","dateOptionsNumeric","EachBookingComponent","controlType","updateStateSchedulingStart","updateStateSchedulingTime","currentDate","endingTime","startingTime","enabled","setServiceWeeks","arrayDisabled","selectedTime","setSelectedTime","selectedTimeEnd","setSelectedTimeEnd","setDateDropOff","openTimeLayerDrop","setOpenTimeLayerDrop","showResumeInfo","setShowResumeInfo","timeSpacesAvailable","setTimeSpacesAvailable","disDaysDropOff","setDisDaysDropOff","getDisabledDays","zipCode","availabilityEndPoint","disableDaysList","dateNow","getTime","toFixed","parseInt","weekInSeconds","dateWithWeeks","toLocaleDateString","undefined","split","nowDayId","Availability","getDateFromDayId","dateStr","y","substr","m","d","filterDayID","dateVal","x","toString","getDate","getDayIDFromDate","timeRow","setDate","addWeeks","dt","n","getNumberOfWeeks","maxNumber","bufferToteBoxesGlobalInfo","eachDate","openDetailedBooking","layerClassListDrop","calendarControlClasses","convertTo12HoursFormat","time","match","slice","join","timeConverter","timeString","endTime","hours","rhours","Math","floor","minutes","rminutes","round","handleDayClick","arrayFiltered","kind","stringDate","arr","stringTimeStart","stringTimeEnd","onDayClick","disabledDays","before","selectedDays","CalendarControlsWrap","origin","parentFunction","schedulingSummary","schedulingSummaryLocal","setSchedulingSummaryLocal","serviceWeeks","calculateDays","endDate","dt1Full","dt2Full","enableCalendar","setEnableCalendar","setArrayDisabled","dateData","timeData","timeRangeDropStart","timeRangeDropEnd","datePickUp","timeRangePickStart","timeRangePickEnd","Scheduling","window","scrollTo","behavior","top","validationSchemaFourthStep","firstNameField","lastNameField","telField","emailField","addressDropOffField","cityDropOffField","stateDropOffField","addressPickUpField","cityPickUpField","statePickUpField","validateAddress","validateCity","stringValue","validateState","validateName","validateLastName","validateTelephone","validateEmail","AddressFormStep","sameAddressAsDropOff","openHideFieldsBillingAddress","setOpenHideFieldsBillingAddress","sameAsMainContactDropOff","openHideFieldsDropOff","setOpenHideFieldsDropOff","sameAsMainContactPickUp","openHideFieldsPickUp","setOpenHideFieldsPickUp","billingAddressField","billingCityField","billingStateField","billingAddressZipField","zipCodeDropOff","component","textareaDropOff","firstNameFieldDifferentDrop","lastNameFieldDifferentDrop","telFieldDifferentDrop","emailFieldDifferentDrop","zipCodePickUp","firstNameFieldDifferentPickUp","lastNameFieldDifferentPickUp","telFieldDifferentPickUp","emailFieldDifferentPickUp","authNetURL","merchantKey","API","globalFormValues","cardHolderNameField","cardNumberField","expirationDateField","expiryMask","dropOffGlobalObj","clientID","contactID","locationID","lockID","optionID","workOrder","jobID","pickUpGlobalObj","Confirm","cvc","setCVC","expiry","setExpiry","setFocus","setNameCard","numberCard","setNumberCard","amount","description","globalDiscount","setGlobalDiscount","taxPercent","setTaxPercent","size","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","validateNameCardHolder","validateNameCardNumber","validateDateExp","validateCVCCode","trackFocus","target","getPromoDiscount","inputVal","document","getElementById","discountFields","JSON","stringify","headers","Promo","promoDiscount","promoDescription","getProfileUsingID","customerProfileId","authNetTransaction","authNetTransactionLog","authorizeFilds9dot3","messages","resultCode","createPayment","formatPrice","getTotalPriceWithDiscount","getTotalPrice","getValuesToCompletePayment","authorizeFilds9dot2","message","text","authNetClient","authNetCard","customerPaymentProfileIdList","validationDirectResponseList","totalPrice","selectedTotes","i","len","getTaxesPercent","getTaxesFields","pageNo","pageSize","Taxes","getBillTo","retData","address","city","country","firstName","lastName","getShipTo","createAuthorize","expiryFormatted","substring","authorizeFilds","transactionResponse","transId","newPaymentFields","method","authNetCardLast4Digits","Fields","body","classList","remove","createWorkOrders","requestType","workOrderFields","serviceTypeID","WorkOrder","objectID","createNewJob","newJobFields","Job","lockAvailability","lockAvailabilityFields","duration","Ids","setBillingAddress","setBillingAddressFields","addLocation","addLocationFields","textareaPickUp","Location","setMainContact","mainContactID","setMainContactFields","Contact","getContactInfoByType","contactType","tel","email","createContact","createContactFields","createClient","createClientFields","Client","add","onFocus","render","field","mask","cvcField","useStyles","makeStyles","theme","textCenter","textAlign","Success","classes","UserForm","setStep","prev","tokenGenerated","setTokenGenerated","setFranchises","zips","setZips","load","setLoad","setError","generateToken","franchisesEndPoint","Franchises","App","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.69006de1.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useLayoutEffect } from 'react';\nimport { Header } from './Header';\nimport { CalendarControlsWrap } from './bookingControls/CalendarControlsWrap'\nimport { Formik, Form, Field } from 'formik';\nimport MaskedInput from \"react-text-mask\";\nimport * as yup from 'yup';\nimport Cards from 'react-credit-cards';\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/FormContext\";\nimport { merchantName_17, merchantKey_17, merchantName_20, merchantKey_20, merchantName_21, merchantKey_21, authNetURL } from './constant';\nlet merchantName, merchantKey = ''\nconst API = 'https://kingtote.vonigo.com/'\nlet globalFormValues = ''\n\nconst validationSchemaFourthStep = yup.object({\n  cardHolderNameField: yup\n    .string()\n    .required('Name is required'),\n  cardNumberField: yup\n    .string()\n    .required('Card number is required'),\n  expirationDateField: yup\n    .string()\n    .required('Expiration date is required'),\n});\n\nconst expiryMask = [\n  /[0-9]/,\n  /[0-9]/,\n  \"/\",\n  /[0-9]/,\n  /[0-9]/,\n];\n\nlet dropOffGlobalObj = {\n  clientID: 0,\n  contactID: 0,\n  locationID: 0,\n  lockID: 0,\n  optionID: 245,\n  workOrder: 0,\n  jobID: 0\n}\n\nlet pickUpGlobalObj = {\n  clientID: 0,\n  contactID: 0,\n  locationID: 0,\n  lockID: 0,\n  optionID: 246,\n  workOrder: 0,\n  jobID: 0\n}\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nexport const Confirm = ({ \n    formData, \n    setFormData,\n    prevStep,\n    nextStep }) => {\n    const [direction, setDirection] = useState('back');\n    const [cvc, setCVC] = useState('');\n    const [expiry, setExpiry] = useState('');\n    const [focus, setFocus] = useState('');\n    const [nameCard, setNameCard] = useState('');\n    const [numberCard, setNumberCard] = useState('');\n    // const [globalDiscount, setGlobalDiscount] = useState(0);\n    const [globalDiscount, setGlobalDiscount] = useState({amount: 0, description:''});\n    const [taxPercent, setTaxPercent] = useState(1);\n    const [width] = useWindowSize();\n    const { state } = useContext(GlobalContext);\n\n  const validateNameCardHolder = value => {\n\n    setNameCard(value)\n  };\n\n  const validateNameCardNumber = value => {\n\n    setNumberCard(value)\n  };\n\n  const validateDateExp = value => {\n\n    setExpiry(value)\n  };\n\n  const validateCVCCode = value => {\n    let stringValue = value + ''\n    let error;\n\n    setCVC(value)\n      if (!value) {\n        error = 'CVC required';\n      } else if (stringValue.length > 4) {\n        error = 'CVC code is 4 digits or less';\n      } else if (stringValue.length < 3) {\n        error = 'CVC code is 3 digits at least';\n      }\n      return error;\n  };\n\n  const trackFocus = (e) => {\n    //const { name, value } = e.target;\n    //console.log('trackFocus name: ', name)\n    //console.log('trackFocus value: ', value)\n    setFocus(e.target.name)\n  }\n\n  const getPromoDiscount = async (e) => {\n\n    e.preventDefault()\n\n    let inputVal = document.getElementById('promoCodeField').value;\n\n    if(inputVal === '' || inputVal.length < 4) {\n      setGlobalDiscount({amount: 0, description:''})\n      return\n    }\n    \n    let discountFields = {\n      \"securityToken\": state.securityToken,\n      \"method\": \"1\",\n      \"promo\": inputVal\n    }\n\n    discountFields = JSON.stringify(discountFields)\n\n    try {\n      const res = await axios.post(API + 'api/v1/resources/promos/?', discountFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n\n      if(res.data !== null){\n        \n        setGlobalDiscount({amount: res.data.Promo[0].promoDiscount, description:res.data.Promo[0].promoDescription})\n      }\n    } catch (err) {\n        console.log('Error getPromoDiscount  >> ', err)\n    }\n  }\n\n  const getProfileUsingID = async (customerProfileId, jobID, authNetTransaction) => {\n\n    let authNetClient, authNetCard, authNetTransactionLog = 0\n    let authorizeFilds9dot3 = {\n        \"getCustomerProfileRequest\": {\n            \"merchantAuthentication\": {\n                \"name\": merchantName,\n                \"transactionKey\": merchantKey\n            },\n            \"customerProfileId\": customerProfileId,\n            \"includeIssuerInfo\": \"true\"\n        }\n      }\n\n      authorizeFilds9dot3 = JSON.stringify(authorizeFilds9dot3)\n\n      try {                           \n        const res = await axios.post(authNetURL, authorizeFilds9dot3, {\n          headers: {\n          'Content-Type': 'application/json',\n          }\n        });\n        console.log(' $ getProfileUsingID : ', res.data)\n        if(res.data !== null){\n\n          if(res.data.messages.resultCode === 'Ok'){\n\n            authNetClient = customerProfileId\n            //authNetCard = res.data.profile.paymentProfiles[0]\n            //authNetTransactionLog = res.data.profile.paymentProfiles[0]\n            createPayment(jobID, authNetTransaction, authNetClient, authNetCard, authNetTransactionLog, \n              formatPrice((getTotalPriceWithDiscount( getTotalPrice()) * ((taxPercent / 100) + 1))) )\n          }\n        }\n      } catch (err) {\n        console.log('Error getProfileUsingID >> ', err)\n      }\n  }\n\n  const getValuesToCompletePayment = async (jobID, authNetTransaction) => {\n\n    let authNetClient, authNetCard, authNetTransactionLog = 0\n    let customerProfileId = 0\n\n    let authorizeFilds9dot2 = {\n      \"createCustomerProfileRequest\": {\n          \"merchantAuthentication\": {\n            \"name\": merchantName,\n            \"transactionKey\": merchantKey\n          },\n          \"profile\": {\n            \"email\": globalFormValues.emailField,\n            \"paymentProfiles\": {\n                \"customerType\": \"individual\",\n                \"payment\": {\n                    \"creditCard\": {\n                        \"cardNumber\": numberCard,\n                        \"expirationDate\": expiry\n                    }\n                }\n            }\n          }\n        }\n      }\n\n    authorizeFilds9dot2 = JSON.stringify(authorizeFilds9dot2)\n\n    try {                           \n      const res = await axios.post(authNetURL, authorizeFilds9dot2, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      console.log(' $ getValuesToCompletePayment : ', res.data)\n      if(res.data !== null){\n\n        if(res.data.messages.resultCode === 'Error'){\n\n          customerProfileId = res.data.messages.message[0].text\n          customerProfileId = customerProfileId.split(' ')[5]\n          getProfileUsingID(customerProfileId, jobID, authNetTransaction)\n        }\n        \n        if(res.data.messages.resultCode === 'Ok'){\n          authNetClient = res.data.customerProfileId\n          authNetCard = res.data.customerPaymentProfileIdList[0]\n          authNetTransactionLog = res.data.validationDirectResponseList[0]\n          \n          createPayment(jobID, authNetTransaction, authNetClient, authNetCard, authNetTransactionLog, \n            formatPrice((getTotalPriceWithDiscount( getTotalPrice()) * ((taxPercent / 100) + 1))) )\n        }\n        \n      }\n    } catch (err) {\n      console.log('Error getValuesToCompletePayment >> ', err)\n    }\n  }\n\n  const getTotalPriceWithDiscount = (totalPrice) => {\n\n    return totalPrice = (totalPrice * (100 - globalDiscount.amount)) / 100\n  }\n\n  const getTotalPrice = () => {\n    if(!state.toteBoxesContent){\n      return 0\n    }\n    else{\n      let totalPrice = 0;\n      let selectedTotes = state.toteBoxesContent.filter(toteRow => toteRow.indexActive !== null)\n      for (var i = 0, len = selectedTotes.length; i < len; i++) {\n        let toteRow = selectedTotes[i];\n        totalPrice += toteRow.prices[toteRow.indexActive].price\n      }\n      return formatPrice(totalPrice);                    \n    }\n  }\n\n  const getTaxesPercent = async () => {\n\n    let getTaxesFields = {\n      securityToken: state.securityToken,\n      pageNo: '1',\n      pageSize: '50'\n    }\n\n    getTaxesFields = JSON.stringify(getTaxesFields)\n\n    try {\n      const res = await axios.post(API + 'api/v1/resources/taxes/?', getTaxesFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      if(res.data.Taxes !== null){\n        //console.log('res.data.Taxes > ', res.data.Taxes)\n        setTaxPercent(res.data.Taxes[0].taxPercent)\n      }\n    } catch (err) {\n        console.log('Error getTaxesPercent  >> ', err)\n    }\n  }\n\n  const getBillTo = () => {\n    var retData = {\n        \"firstName\": state.firstNameField,\n        \"lastName\": state.lastNameField,\n        \"company\": \"\",\n        \"address\": state.addressDropOffField,\n        \"city\": state.cityDropOffField,\n        \"state\": state.stateDropOffField,\n        \"zip\": state.zipCodeDropOff,\n        \"country\": state.locationType==='16'?'USA':'Canada'\n    }\n    if(!state.sameAddressAsDropOff){\n      retData.address = state.billingAddressField\n      retData.city = state.billingCityField\n      retData.state = state.billingStateField\n      retData.zip = state.billingAddressZipField\n      retData.country = state.locationType==='16'?'USA':'Canada'\n    }\n    if(!state.sameAsMainContactDropOff){\n      retData.firstName = state.firstNameFieldDifferentDrop\n      retData.lastName = state.lastNameFieldDifferentDrop\n    }\n    return retData\n  }\n  const getShipTo = () => {\n    let retData = {\n        \"firstName\": state.firstNameField,\n        \"lastName\": state.lastNameField,\n        \"company\": \"\",\n        \"address\": \"\",\n        \"city\": \"\",\n        \"state\": \"\",\n        \"zip\": \"\",\n        \"country\": \"\"\n    }\n    retData.address = state.addressPickUpField\n    retData.city = state.cityPickUpField\n    retData.state = state.statePickUpField\n    retData.zip = state.zipCodePickUp\n    retData.country = state.locationType==='16'?'USA':'Canada'\n    if(!state.sameAsMainContactPickUp){\n      retData.firstName = state.firstNameFieldDifferentPickUp\n      retData.lastName = state.lastNameFieldDifferentPickUp\n    }\n    return retData\n  }\n\n  const createAuthorize = async (jobID) => {\n\n    // card  5424000000000015\n    console.log('price >>>' + getTotalPrice())\n    console.log('total price >>>' + formatPrice((getTotalPriceWithDiscount( getTotalPrice()) * ((taxPercent / 100) + 1) ) ))\n\n    let expiryFormatted = '20'+expiry.substring(3,5)+'-'+expiry.substring(0,2)\n    console.log('expiryFormatted >>' + expiryFormatted)\n\n    let authorizeFilds = {\n      \"createTransactionRequest\": {\n          \"merchantAuthentication\": {\n            \"name\": merchantName,\n            \"transactionKey\": merchantKey\n          },\n          \"refId\": jobID,\n          \"transactionRequest\": {\n              \"transactionType\": \"authCaptureTransaction\",\n              \"amount\": formatPrice((getTotalPriceWithDiscount( getTotalPrice()) * ((taxPercent / 100) + 1) ) ),\n              \"payment\": {\n                  \"creditCard\": {\n                      \"cardNumber\": numberCard,\n                      \"expirationDate\": expiryFormatted,\n                      \"cardCode\": cvc\n                  }\n              },\n              \"tax\": {\n                \"amount\": formatPrice((getTotalPriceWithDiscount( getTotalPrice()) * ((taxPercent / 100) + 1) ) ),\n                \"name\": \"voing tax\",\n                \"description\": `${taxPercent} %`\n              },\n              \"billTo\": getBillTo(),\n              \"shipTo\": getShipTo()\n          }\n        }\n      }\n\n      authorizeFilds = JSON.stringify(authorizeFilds)\n\n      try {                           \n        const res = await axios.post(authNetURL, authorizeFilds, {\n          headers: {\n          'Content-Type': 'application/json',\n          }\n        });\n        //console.log(' $ createAuthorize : ', res.data)\n        if(res.data !== null){\n          getValuesToCompletePayment(jobID, res.data.transactionResponse.transId )\n        }\n      } catch (err) {\n        console.log('Error createAuthorize >> ', err)\n      }\n  }\n\n  const createPayment = async ( jobID, authNetTransaction, authNetClient, authNetCard, authNetTransactionLog, amount ) => {\n    \n    let newPaymentFields = {\n      securityToken: state.securityToken,\n      method: '3',\n      clientID: dropOffGlobalObj.clientID,\n      jobID: jobID,\n      authNetClient: authNetClient,\n      authNetCard: authNetCard,\n      authNetCardLast4Digits: numberCard.substring(11,15),\n      authNetTransaction: authNetTransaction,\n      authNetTransactionLog: authNetTransactionLog,\n      Fields: [\n        {\n          \"fieldID\": 930,\n          \"fieldValue\": amount\n        },\n        {\n          \"fieldID\": 931,\n          \"fieldValue\": amount\n        },\n        {\n          \"fieldID\": 936,\n          \"optionID\": 10124\n        },\n        {\n          \"fieldID\": 928,\n          \"fieldValue\": 'Online booking. No summary data'\n        } \n      ]\n      }\n\n      newPaymentFields = JSON.stringify(newPaymentFields)\n\n      try {\n        const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/Payments/?', newPaymentFields, {\n          headers: {\n          'Content-Type': 'application/json',\n          }\n        });\n        console.log(' $ $ $ createPayment : ', res.data)\n        if(res.data !== null){\n          direction === 'back' ? prevStep() : nextStep();\n          document.body.classList.remove('busy-cursor');\n          //createWorkOrders(res.data.Job.objectID, 'dropOff')\n          //createWorkOrders(res.data.Job.objectID, 'pickUp')\n          \n        }\n      } catch (err) {\n        console.log('Error createPayment >> ', err)\n      }\n    \n  }\n\n  const createWorkOrders = async ( jobID, requestType ) => {\n\n    let workOrderFields = {\n                        securityToken: state.securityToken,\n                        method: '3',\n                        jobID: jobID,\n                        lockID: (requestType === 'dropOff') ? dropOffGlobalObj.lockID : pickUpGlobalObj.lockID,\n                        clientID: (requestType === 'dropOff') ? dropOffGlobalObj.clientID : pickUpGlobalObj.clientID,\n                        contactID: (requestType === 'dropOff') ? dropOffGlobalObj.contactID : pickUpGlobalObj.contactID,\n                        locationID: (requestType === 'dropOff') ? dropOffGlobalObj.locationID : pickUpGlobalObj.locationID,\n                        serviceTypeID: formData.locationType,\n                        Fields: [\n                          {\n                            \"fieldID\": 200,\n                            \"fieldValue\": 'Online booking. No summary data'\n                          },\n                          {\n                            \"fieldID\": 186,\n                            \"fieldValue\": 60\n                          },\n                          {\n                            \"fieldID\": 201,\n                            \"optionID\": (requestType === 'dropOff') ? 245 : 246\n                          } \n                        ]\n                      }\n\n    workOrderFields = JSON.stringify(workOrderFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/WorkOrders/?', workOrderFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      \n      if(res.data !== null){\n        \n        if(requestType === 'dropOff'){\n          dropOffGlobalObj.workOrder = res.data.WorkOrder.objectID\n        }else{\n          pickUpGlobalObj.workOrder = res.data.WorkOrder.objectID\n        }\n      }\n    } catch (err) {\n      console.log(requestType,' Error createWorkOrders >> ', err)\n    }\n    \n  }\n\n  const createNewJob = async () => {\n\n    let newJobFields = {\n                        securityToken: state.securityToken,\n                        method: '3',\n                        clientID: dropOffGlobalObj.clientID,\n                        Fields: [\n                          {\n                            \"fieldID\": 978,\n                            \"fieldValue\": 'Online booking. No summary data'\n                          },\n                          {\n                            \"fieldID\": 982,\n                            \"optionID\": (formData.locationType === '16') ? 10278 : 10173\n                          } \n                        ]\n                      }\n\n    newJobFields = JSON.stringify(newJobFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/Jobs/?', newJobFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      if(res.data !== null){\n        createWorkOrders(res.data.Job.objectID, 'dropOff')\n        createWorkOrders(res.data.Job.objectID, 'pickUp')\n        createAuthorize(res.data.Job.objectID)\n        \n      }\n    } catch (err) {\n      console.log('Error createNewJob >> ', err)\n    }\n  }\n\n  const lockAvailability = async ( objectID, requestType) => {\n\n    let lockAvailabilityFields = {\n                                securityToken: state.securityToken,\n                                method: '2',\n                                dayID: (requestType === 'dropOff') ? state.dropOffObj.dayID : state.pickUpObj.dayID,\n                                routeID: (requestType === 'dropOff') ? state.dropOffObj.routeID : state.pickUpObj.routeID,\n                                locationID: objectID,\n                                serviceTypeID: formData.locationType,\n                                duration: 60,\n                                startTime: (requestType === 'dropOff') ? state.dropOffObj.startTime : state.pickUpObj.startTime\n                              }\n\n    lockAvailabilityFields = JSON.stringify(lockAvailabilityFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/resources/availability/?', lockAvailabilityFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      \n      if(res.data !== null){\n        \n        if(requestType === 'dropOff'){\n          dropOffGlobalObj.lockID = res.data.Ids.lockID\n          createNewJob()\n        }\n\n        if(requestType === 'pickUp'){\n          pickUpGlobalObj.lockID = res.data.Ids.lockID\n        }\n      }\n    } catch (err) {\n        console.log(requestType + ' Error lockAvailabilityFields>> ', err)\n    }\n    \n  }\n\n  const setBillingAddress = async (locationID) => {\n\n    let setBillingAddressFields = {\n                                securityToken: state.securityToken,\n                                method: '9',\n                                objectID: locationID,\n                              }\n\n    setBillingAddressFields = JSON.stringify(setBillingAddressFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/Locations/?', setBillingAddressFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      \n      if(res.data !== null){\n        console.log('setBillingAddress : ', res.data)\n        //console.log('setBillingAddress okay: ', res.data)\n        //setMainContact(res.data.Contact.objectID)\n      }\n    } catch (err) {\n      console.log('Error setBillingAddress >> ', err)\n    }\n  }\n\n  const addLocation = async (values, objectID, requestType) => {\n\n    let addLocationFields = {\n                              securityToken: state.securityToken,\n                              method: '3',\n                              clientID: objectID,\n                              Fields: [\n                                {\n                                  \"fieldID\": 773,\n                                  \"fieldValue\": (requestType === 'dropOff') ? values.addressDropOffField : values.addressPickUpField\n                                },\n                                {\n                                  \"fieldID\": 776,\n                                  \"fieldValue\": (requestType === 'dropOff') ? values.cityDropOffField : values.cityPickUpField\n                                },\n                                {\n                                  \"fieldID\": 778,\n                                  \"optionID\": '9847'\n                                },\n                                {\n                                  \"fieldID\": 775,\n                                  \"fieldValue\": (requestType === 'dropOff') ? values.zipCodeDropOff : values.zipCodePickUp\n                                },\n                                {\n                                  \"fieldID\": 779,\n                                  \"optionID\": '9906'\n                                },\n                                {\n                                  \"fieldID\": 9713,\n                                  \"fieldValue\": (requestType === 'dropOff') ? values.textareaDropOff : values.textareaPickUp\n                                }\n                              ]\n                            }\n\n      if(requestType === 'billing'){\n\n        addLocationFields = {\n                              securityToken: state.securityToken,\n                              method: '3',\n                              clientID: objectID,\n                              Fields: [\n                                {\n                                  \"fieldID\": 773,\n                                  \"fieldValue\": values.billingAddressField\n                                },\n                                {\n                                  \"fieldID\": 776,\n                                  \"fieldValue\": values.billingCityField\n                                },\n                                {\n                                  \"fieldID\": 778,\n                                  \"optionID\": '9847'\n                                },\n                                {\n                                  \"fieldID\": 775,\n                                  \"fieldValue\": values.billingAddressZipField\n                                },\n                                {\n                                  \"fieldID\": 779,\n                                  \"optionID\": '9906'\n                                },\n                                {\n                                  \"fieldID\": 9713,\n                                  \"fieldValue\": '-'\n                                }\n                              ]\n                            }\n    }\n    \n    addLocationFields = JSON.stringify(addLocationFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/Locations/?', addLocationFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      \n        if(res.data !== null){\n          console.log(\"\\n\")\n          console.log(requestType +' Locations : ', res.data)\n          \n          if(requestType === 'billing'){\n            setBillingAddress(res.data.Location.objectID)\n            return\n          }\n\n          if(requestType === 'pickUp'){\n\n            if(!values.sameAddressAsDropOff){\n              addLocation(values, objectID, 'billing')\n            }\n            \n            lockAvailability(res.data.Location.objectID, requestType)\n            pickUpGlobalObj.locationID = res.data.Location.objectID\n\n            return\n\n          }else if(requestType === 'dropOff'){ \n\n            lockAvailability(res.data.Location.objectID, requestType)\n            dropOffGlobalObj.locationID = res.data.Location.objectID\n\n            if(values.sameAddressAsDropOff){\n              setBillingAddress(res.data.Location.objectID)\n            }\n          }\n\n          addLocation(values, objectID, 'pickUp')\n        }\n\n    } catch (err) {\n      console.log(requestType + ' Error Locations>> ', err)\n    }\n    \n  }\n\n  const setMainContact = async (mainContactID) => {\n\n    let setMainContactFields = {\n                                securityToken: state.securityToken,\n                                method: '9',\n                                objectID: mainContactID,\n                                \n                              }\n\n    setMainContactFields = JSON.stringify(setMainContactFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/Contacts/?', setMainContactFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      //console.log('setMainContactFields response : ', res)\n      if(res.data.Contact !== null){\n\n        //console.log('setMainContactFields okay: ', res.data.Contact.objectID)\n        //setMainContact(res.data.Contact.objectID)\n      }\n    } catch (err) {\n        console.log('Error WorkOrders >> ', err)\n    }\n    \n  }\n\n  const getContactInfoByType = (values, objectID, contactType) => {\n    let createContactFields\n    let firstName\n    let lastName\n    let tel\n    let email\n    switch (contactType) {\n      case \"main\":\n        firstName = values.firstNameField\n        lastName = values.lastNameField\n        tel = values.telField\n        email = values.emailField\n        break;\n      case \"dropOff\":\n        firstName = values.firstNameFieldDifferentDrop\n        lastName = values.lastNameFieldDifferentDrop\n        tel = values.telFieldDifferentDrop\n        email = values.emailFieldDifferentDrop\n        break;\n      case \"pickUp\":\n        firstName = values.firstNameFieldDifferentPickUp\n        lastName = values.lastNameFieldDifferentPickUp\n        tel = values.telFieldDifferentPickUp\n        email = values.emailFieldDifferentPickUp\n        break;\n      default:\n        break;\n    }\n    createContactFields = {\n      securityToken: state.securityToken,\n      method: '3',\n      clientID: objectID,\n      Fields: [\n        {\n          \"fieldID\": 127,\n          \"fieldValue\": firstName\n        },\n        {\n          \"fieldID\": 128,\n          \"fieldValue\": lastName\n        },\n        {\n          \"fieldID\": 1088,\n          \"fieldValue\": tel\n        },\n        {\n          \"fieldID\": 97,\n          \"fieldValue\": email\n        }    \n      ]\n    }\n    return createContactFields;\n  }\n\n  const createContact = async (values, objectID, contactType) => {\n    console.log(values);\n    let createContactFields = getContactInfoByType(values, objectID, contactType);\n\n    createContactFields = JSON.stringify(createContactFields)\n    //console.log('createContactFields >> ', createContactFields)\n\n    try {\n      const res = await axios.post('https://kingtote.vonigo.com/api/v1/data/Contacts/?', createContactFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n\n      \n      if(res.data.Contact !== null){\n\n        //console.log(contactType,' + + + + + + Contacts: ', res.data )\n\n        if(contactType === 'main'){\n          setMainContact(res.data.Contact.objectID)\n          if(values.sameAsMainContactDropOff){\n            dropOffGlobalObj.contactID = res.data.Contact.objectID\n          }\n          if(values.sameAsMainContactPickUp){\n            pickUpGlobalObj.contactID = res.data.Contact.objectID\n          }\n        }\n\n        if(contactType === 'dropOff'){\n          dropOffGlobalObj.contactID = res.data.Contact.objectID\n        }\n\n        if(contactType === 'pickUp'){\n          pickUpGlobalObj.contactID = res.data.Contact.objectID\n        }\n\n        \n      }\n    } catch (err) {\n      console.log(contactType,' Error Contacts>> ', err)\n    }\n\n  }\n\n  const createClient = async (values) => {\n\n    let createClientFields = {\n                                securityToken: state.securityToken,\n                                method: '3',\n                                Fields: [\n                                  {\n                                    \"fieldID\": 121,\n                                    \"optionID\": (formData.locationType === '16') ? 59 : 60\n                                  },\n                                  {\n                                    \"fieldID\": 126,\n                                    \"fieldValue\": values.lastNameField + ' ' + values.firstNameField\n                                  },\n                                  {\n                                    \"fieldID\": 112,\n                                    \"fieldValue\": values.telField\n                                  },\n                                  {\n                                    \"fieldID\": 1091,\n                                    \"fieldValue\": values.emailField\n                                  }    \n                                ]\n                              }\n\n\n    globalFormValues = values\n\n    switch (values.serviceArea) {\n      case \"17\":\n        merchantName = merchantName_17\n        merchantKey = merchantKey_17\n        break;\n      case \"20\":\n        merchantName = merchantName_20\n        merchantKey = merchantKey_20\n        break;\n      case \"21\":\n        merchantName = merchantName_21\n        merchantKey = merchantKey_21\n        break;\n      default:\n        break;\n    }\n\n    createClientFields = JSON.stringify(createClientFields)\n\n    try {\n      const res = await axios.post(API + 'api/v1/data/Clients/?', createClientFields, {\n        headers: {\n        'Content-Type': 'application/json',\n        }\n      });\n      if(res.data.Client !== null){\n        await createContact(values, res.data.Client.objectID, 'main')\n        if(!values.sameAsMainContactDropOff && dropOffGlobalObj.contactID === 0){\n          await createContact(values, res.data.Client.objectID, 'dropOff')\n        }\n        if(!values.sameAsMainContactPickUp && pickUpGlobalObj.contactID === 0){\n          await createContact(values, res.data.Client.objectID, 'pickUp')\n        }\n        addLocation(values, res.data.Client.objectID, 'dropOff')\n        dropOffGlobalObj.clientID = res.data.Client.objectID\n        pickUpGlobalObj.clientID = res.data.Client.objectID\n        \n      }\n    } catch (err) {\n        console.log('Error Clients  >> ', err)\n    }\n\n  }\n\n  useEffect(() => {\n    window.scrollTo({\n        behavior: \"smooth\",\n        top: 0\n    });\n    getTaxesPercent()\n  }, []);\n\n  const formatPrice = (price) => {\n    \n    return (price % 1 !== 0) ? price.toFixed(2) : price.toFixed(2)\n  }\n\n  return (\n    <>\n      <Header title='Confirm User Data' step=\"Five\"/>\n      <div className=\"introWrap\">\n        <h2>Order Confirmation</h2>\n        <p>Please provide Payment Information and review your order details</p>\n      </div>\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          setFormData(values);\n          createClient(values);\n          document.body.classList.add('busy-cursor');\n        }}\n        validationSchema={validationSchemaFourthStep}\n        >\n        {({ errors, touched }) => (\n        <Form className=\"fifthForm\">\n\n          <div className=\"inlineFifth\">\n\n            <div className=\"leftFields\">\n              {/* <div className=\"formControl\">\n                  <div className=\"cardWarp\">\n                    <Cards\n                      cvc={cvc}\n                      expiry={expiry}\n                      focused={focus}\n                      name={nameCard}\n                      number={numberCard}\n                      />\n                  </div>\n              </div> */}\n              <div className=\"formControl\">\n                <h3>Payment Information</h3>\n                <label htmlFor=\"cardHolderNameInput\">Cardholder Name</label>\n                <Field \n                  id=\"cardHolderNameInput\"\n                  name='cardHolderNameField' \n                  placeholder=\"Jane Doe\"\n                  validate={validateNameCardHolder}\n                  onFocus={trackFocus}\n                  />\n                  {errors.cardHolderNameField && touched.cardHolderNameField && <div className=\"errorMessage\">{errors.cardHolderNameField}</div>}\n              </div>\n              \n              <div className=\"formControl\">\n                  <label htmlFor=\"cardNumberInput\">Card Number</label>\n                  <Field \n                    id=\"cardNumberInput\"\n                    name='cardNumberField' \n                    placeholder=\"\"\n                    validate={validateNameCardNumber}\n                    onFocus={trackFocus}\n                    />\n                    {errors.cardNumberField && touched.cardNumberField && <div className=\"errorMessage\">{errors.cardNumberField}</div>}\n              </div>\n              <div className=\"formControl inlineFields\">\n                <div className=\"wrapBillingInline\">\n                    <label htmlFor=\"expirationDateInput\">Expiration Date</label>\n                    <Field\n                      name='expirationDateField'\n                      validate={validateDateExp}\n                      onFocus={trackFocus}\n                      render={({ field }) => (\n                        <MaskedInput\n                          {...field}\n                          mask={expiryMask}\n                          id=\"expirationDateInput\"\n                          placeholder=\"MM/YY\"\n                          type=\"text\"\n                        />\n                      )}\n                    />\n                    {errors.expirationDateField && touched.expirationDateField && <div className=\"errorMessage\">{errors.expirationDateField}</div>}\n                </div>\n                <div className=\"wrapBillingInline\">\n                    <label htmlFor=\"cvcInput\">Security Code</label>\n                    <Field \n                      id=\"cvcInput\"\n                      name='cvcField' \n                      placeholder=\"\"\n                      type=\"number\"\n                      validate={validateCVCCode}\n                      onFocus={trackFocus}\n                      />\n                      {errors.cvcField && touched.cvcField && <div className=\"errorMessage\">{errors.cvcField}</div>}\n                </div>\n              </div>\n              \n\n            </div>\n            <div className=\"rightFields\">\n              <div className=\"formControl\">\n                <h3>Order Details </h3>\n                {\n                  state.toteBoxesContent ? state.toteBoxesContent\n                    .filter(toteRow => toteRow.indexActive !== null)\n                    .map((toteRow, index) => {\n                      return <div key={index} className=\"rowDetailWrap\">\n                                <p>{toteRow.indexActive + 1} {(toteRow.indexActive > 0 ? 'weeks' : 'week')} - {toteRow.title}</p>\n                                <span>${ formatPrice(toteRow.prices[toteRow.indexActive].price) }</span>\n                            </div>\n                    }) : ''\n                }\n                \n                <div className=\"rowDetailWrap topLine\">\n                  <p>Sub Total </p>\n                  <span>${ formatPrice( getTotalPrice()*1.00)}</span>\n                </div>\n                {\n                  (globalDiscount.amount > 0) ? (\n                    <>\n                    <div className=\"rowDetailWrap\">\n                      <p>Discount ({globalDiscount.description})</p>\n                      <span>- ${ formatPrice((getTotalPrice() * globalDiscount.amount) / 100)}</span>\n                    </div>\n                    </>\n                  ) : ''\n                }\n                {\n                  (taxPercent > 1) ? (\n                    <>\n                    <div className=\"rowDetailWrap \">\n                      <p>Taxes ({taxPercent}%)</p>\n                      <span>${ formatPrice((getTotalPriceWithDiscount( getTotalPrice())) * (taxPercent / 100) ) }</span>\n                    </div>\n                    <div className=\"rowDetailWrap topLine bold\">\n                      <p>Total</p>\n                      <span>${ formatPrice((getTotalPriceWithDiscount( getTotalPrice()) * ((taxPercent / 100) + 1) ) ) }</span>\n                    </div>\n                    </>\n                  ) : ''\n                }\n            </div>\n            <div className=\"formControl inlineFields\">\n                <div className=\"wrapBillingInline\">\n                    <label htmlFor=\"promoCodeField\">Promo Code</label>\n                    <Field \n                      id=\"promoCodeField\"\n                      name='promoCodeField' \n                      placeholder=\"Enter Code\"\n                      type=\"string\"\n                      />\n                </div>\n                <div className=\"wrapBillingInline\">\n                  <label className=\"transparent\">Apply</label>\n                  <button className=\"whiteBtn\" onClick={ getPromoDiscount }>\n                    <span>Apply</span>\n                  </button>\n                </div>\n              </div>\n            \n          </div>\n            \n            {/* <div className=\"rightFields\">\n              \n            </div> */}\n            \n          </div>\n\n        <div className=\"inlineFifth\">            \n            <div className=\"rightFields\">\n              </div>\n        </div>\n\n          <div className=\"inlineFifth calendars\">\n            <CalendarControlsWrap\n              formData={formData}\n              setFormData={setFormData}\n              origin=\"Confirm\"\n            />\n          </div>\n          \n          <div className=\"formControl submitControl fullLenght\">\n            <button className=\"whiteBtn\" type=\"submit\" onClick={() => prevStep()}>\n              <span>Previous</span>\n            </button>\n            <button type=\"submit\" className=\"submitOrder\" onClick={() => setDirection('next')}>\n              <span>{ (width > 768) ? 'Submit Order' : 'Submit' } </span>\n            </button>\n          </div>\n        </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\n","export const FormReducer = (state, action) => {\n    switch(action.type){\n        case \"SET_TOKEN\":\n            return {...state, securityToken: action.payload}\n\n        case \"UPDATE_TOTE_BOXES\":\n            return {...state, toteBoxesContent: action.payload}\n\n        case \"SET_DROP_OFF\":\n            return {...state, dropOffObj: action.payload}\n\n        case \"SET_PICK_UP\":\n            return {...state, pickUpObj: action.payload}\n            \n        default: \n            return state;\n    }\n}","import React from \"react\";\nimport { FormReducer } from \"./FormReducer\";\n\nconst initialState = {\n    securityToken: null,\n    toteBoxesContent: null,\n    dropOffObj: {dayID: 20200313,\n                routeID: 47,\n                startTime: 960},\n    pickUpObj: {dayID: 20200319,\n                routeID: 47,\n                startTime: 480}\n}\n\nexport const GlobalContext = React.createContext(initialState);\n\n\nconst FormProvider = (props) => {\n\n    const [state, dispatch] = React.useReducer(FormReducer, initialState);\n    const value = {state, dispatch};\n\n    return <GlobalContext.Provider value={value}>\n                {props.children}\n           </GlobalContext.Provider>\n\n}\n\nexport default FormProvider","\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport mainLogo from '../images/kt_logo_150.png';\n\nexport const Header = ({ step }) => {\n  const [currentStep, setCurrentStep] = useState('stepWrap step'+ step);\n\n  useEffect(() => {\n    setCurrentStep('stepWrap step'+ step)\n  }, [step])\n\n  return (\n    <div>\n      <div className=\"headerComponent\">\n        <a href=\"/\">\n          <img src={mainLogo} alt=\"King Tote\"/>\n        </a>\n        <div className={currentStep}>\n          <div className=\"eachStep first\"></div>\n          <div className=\"eachStep\"></div>\n          <div className=\"eachStep\"></div>\n          <div className=\"eachStep\"></div>\n          <div className=\"eachStep\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n","import React, {useState, useContext} from 'react';\nimport { Header } from './Header';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/FormContext\";\n\nlet serviceTypeAndZip = null\n\nexport const FormUserDetails = ({ formData, \n                                  setFormData, \n                                  nextStep, \n                                  franchises, \n                                  zipCodes, \n                                  serviceTypes, \n                                  setServiceTypes,\n                                  setResetCalendars }) => {\n  let serviceAreaValue = 0\n  const { state, dispatch } = useContext(GlobalContext);\n  \n  const validationSchemaFirstStep = yup.object({\n    locationType: yup\n      .string()\n      .required('Pick up is required'),\n    serviceArea: yup\n      .string()\n      .required('Service area is required'),\n    pickUp: yup\n      .number()\n      .positive()\n      .integer()\n      .required('zip code is required'),\n  });\n  \n  const validateServideArea = async (value) => {\n    let error;\n    if (!value) {\n      error = 'Service area is required';\n    } else {\n\n      if(value !== serviceAreaValue){\n        serviceAreaValue = value\n        let zipCodeEndPoint = 'https://kingtote.vonigo.com/api/v1/resources/zips/?securityToken='+ state.securityToken + '&pageNo=1&pageSize=50'\n        let changeFranchise = 'https://kingtote.vonigo.com/api/v1/security/session/?securityToken='+ state.securityToken + '&method=2&franchiseID='+serviceAreaValue\n        await axios.post(changeFranchise);\n        const res = await axios.post(zipCodeEndPoint);\n        zipCodes = res.data.Zips\n      }\n    }\n    return error;\n  };\n\n  const zipCodeFilter = ( zipInteger ) => {\n    let zipString = zipInteger + ''\n    let zipCodeDropExist = zipCodes.filter(item => {\n      return (\n        item.zip === zipString &&\n        item.franchiseID == serviceAreaValue\n      )\n    });\n\n    return zipCodeDropExist\n  };\n\n  const toteBoxesRequest = ( zipValueDropOff, zipValuePickUp, locationId ) => {\n\n    if(serviceTypeAndZip === locationId+''+zipValueDropOff+''+zipValuePickUp) return\n\n    dispatch({\n      type: \"UPDATE_TOTE_BOXES\",\n      payload: null\n    })\n\n    if(formData.dateDropOff !== null) setResetCalendars(true)\n\n    let priceListsEndPoint = 'https://kingtote.vonigo.com/api/v1/data/priceLists/?securityToken='+ state.securityToken +\n                          '&method=2&zipCode=' + zipValueDropOff + '&serviceTypeID='+ locationId +\n                          '&pageNo=1&pageSize=500'\n\n      axios.get(priceListsEndPoint)\n            .then(res => {\n              if(res.data !== null){\n                setServiceTypes(res.data.PriceItems)\n\n                serviceTypeAndZip = locationId+ '' +zipValueDropOff+ '' +zipValuePickUp\n              }\n            })\n            .catch(err => {\n              console.log('Error >> ', err)\n            })\n  };\n\n  const validateZipCode = value => {\n    let stringValue = value + ''\n    let zipResult = ''\n    let error;\n      if (stringValue.length === 5) {\n        zipResult = zipCodeFilter(value)\n        if(zipResult.length === 0 ){\n          error = 'this code is out of the service area'\n        }\n      }\n      else{\n        error = 'invalid zip code';\n      }\n      return error;\n  };\n\n  return (\n    <>\n      <Header title='Enter Personal Details' step=\"One\" />\n\n      <div className=\"introWrap\">\n        <h2>Welcome</h2>\n        <p>Get started by selecting a service area and entering your zip codes to verify we service your area</p>\n      </div>\n\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          toteBoxesRequest( values.dropOff, values.pickUp, values.locationType );\n          setFormData(values);\n          nextStep();\n        }}\n        validationSchema={validationSchemaFirstStep}\n        >\n        {({ errors, touched }) => (\n          <Form>\n            <div className=\"formControl\">\n              <label htmlFor=\"nameImput\">Service Area</label>\n              <Field \n                as=\"select\" \n                name=\"serviceArea\"\n                validate={validateServideArea}\n                >\n                  <option value=\"\">select a service area</option>\n                  {(franchises) ? (\n                      franchises.map(p => <option key={p.franchiseID} value={p.franchiseID}>{p.franchiseName}</option>)\n                  ) : ''\n                  }\n              </Field>\n              {errors.serviceArea && touched.serviceArea && <div className=\"errorMessage\">{errors.serviceArea}</div>}\n            </div>\n            <div className=\"formControl\">\n            </div>\n            <div className=\"formControl\">\n              <label htmlFor=\"dropOff\">Drop-off Zip Code</label>\n              <Field \n                name='dropOff' \n                placeholder=\"zip code\"\n                type=\"number\"\n                validate={validateZipCode}\n                />\n                {errors.dropOff && touched.dropOff && <div className=\"errorMessage\">{errors.dropOff}</div>}\n            </div>\n            <div className=\"formControl\">\n              <label htmlFor=\"pickUp\">Pick-up Zip Code</label>\n              <Field \n                name='pickUp' \n                placeholder=\"zip code\"\n                type=\"number\"\n                validate={validateZipCode}\n                />\n                {errors.pickUp && touched.pickUp && <div className=\"errorMessage\">{errors.pickUp}</div>}\n            </div>\n            <div className=\"formControl\">\n              <label htmlFor=\"locationResidential\">Location type</label>\n              <div className=\"ratioWrap\">\n                <Field \n                  id=\"locationResidential\"\n                  name='locationType'\n                  type=\"radio\"\n                  value=\"16\"\n                />\n                <label htmlFor=\"locationResidential\">Residential</label>\n              </div>\n              <div className=\"ratioWrap\">\n                <Field \n                  id=\"locationCommertial\"\n                  name='locationType'\n                  type=\"radio\"\n                  value=\"15\"\n                />\n                <label htmlFor=\"locationCommertial\">Commertial</label>\n              </div>\n              {errors.locationType && touched.locationType && <div className=\"errorMessage\">{errors.locationType}</div>}\n            </div>\n            <div className=\"formControl submitControl\">\n              <button className=\"button global\" name=\"submit\" type=\"submit\">\n                <span>Next</span>\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const EachBox = ({listClasses, trackKey, dataBox, changeSelectedBox}) => {\n\n    const clickBoxHandler = () => {\n        changeSelectedBox(trackKey)\n    }\n    return (\n        <>\n            <div className={listClasses} onClick={() => clickBoxHandler()}>\n                <p>{dataBox.week} {(dataBox.week > 1 ? 'Weeks' : 'Week')} rental</p>\n                <span className=\"price\">${ (dataBox.price % 1 !== 0) ? dataBox.price+'0' : dataBox.price  }</span>\n            </div>\n        </>\n    );\n};\n\n","import React, {useState} from 'react';\nimport { EachBox } from './EachBox'\n\nexport const ToteBoxesRow = ({trackKey, dataObj, updateSelectedBox}) => {\n    const [selectedBox, setSelectedBox] = useState(dataObj.indexActive);\n    if(dataObj.title === 'Additional Tote'){\n        return null\n    }\n    \n    const changeSelectedBox = (key) => {\n        if(selectedBox === key){\n            setSelectedBox(null)\n            updateSelectedBox({parent:trackKey, child:null})\n\n        }else{\n            setSelectedBox(key)\n            updateSelectedBox({parent:trackKey, child:key})\n        }\n    }\n    const boxesRender = dataObj.prices\n    let toteBoxes = boxesRender.map((toteBox, index) => {\n        return <EachBox \n                    listClasses={selectedBox === index ? 'eachToteItem toteActive' : 'eachToteItem'}\n                    key={index} \n                    trackKey={index}\n                    dataBox={toteBox}\n                    changeSelectedBox={changeSelectedBox}\n                />\n    });\n    return (\n        <>\n            <div className=\"formControl fullLenght\">\n                <label className=\"boldLabel\">{dataObj.title}</label>\n                <p>{dataObj.sub}</p>\n                <div className=\"toteBoxes\">\n                    {toteBoxes}\n                </div>\n                {dataObj.additionalWeek && <p className=\"bottomCentered\">{dataObj.additionalWeek}</p>}\n            </div>\n        </>\n    );\n};\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport { Header } from './Header';\nimport { ToteBoxesRow } from './toteBoxes/ToteBoxesRow'\nimport { GlobalContext } from \"../context/FormContext\";\n\nlet toteBoxesData = []\nlet bufferObj = []\n\nexport const FormToteDetails = ({\n  formData,\n  setFormData,\n  nextStep,\n  prevStep,\n  serviceTypes,\n  resetCalendars,\n  setResetCalendars\n  }) => {\n  const { state, dispatch } = useContext(GlobalContext);\n  const [direction, setDirection] = useState('back');\n  const [nextButtonDisabled, setNextButtonDisabled] = useState(true);\n  let buttonClasses = ''\n  buttonClasses = (nextButtonDisabled) ? 'disabled' : ''\n\n  if(resetCalendars){\n    setFormData({\n      ...formData,\n      'dateDropOff': null,\n      'datePickUp': null,\n      'schedulingSummary': null,\n      'timeRangeDropStart': null,\n      'timeRangeDropEnd': null,\n      'timeRangePickStart': null,\n      'timeRangePickEnd': null,\n    });\n\n    setResetCalendars(false)\n  }\n\n  const switchButtons = () => {\n\n    if(state.toteBoxesContent === null) return\n    let arrSwitch = []\n    //console.log('arrSwitch > ', arrSwitch)\n    state.toteBoxesContent.forEach((eachElem) => {\n      if(eachElem.indexActive !== null) arrSwitch.push(eachElem)\n    });\n\n    (arrSwitch.length) ? setNextButtonDisabled(false) : setNextButtonDisabled(true)\n  }\n\n  const setToteBoxesInfo = ( values ) => {\n\n    setFormData({\n      ...formData,\n      'zipCodeDropOff': formData.dropOff,\n      'zipCodePickUp': formData.pickUp,\n      'promoCodeField': values.promoCodeField,\n    });\n    dispatch({\n      type: \"UPDATE_TOTE_BOXES\",\n      payload: toteBoxesData\n    })\n  };\n\n  const updateSelectedBox = (keyObj) => {\n\n    toteBoxesData[keyObj.parent].indexActive = keyObj.child\n    switchButtons()\n  };\n\n  const addElement = ( elem, nameKey, bufferElem ) => {\n    const found = elem.findIndex(el => el.title === nameKey);\n    if(found !== -1){\n      let temporalArrPush = elem[found].prices\n      temporalArrPush.push(bufferElem)\n    }\n    return (found === -1) ? true : false\n  };\n\n  const setObjectBeforeRenderRows = ( objOrigin ) => {\n\n    if(state.toteBoxesContent !== null) return\n\n    let arrToteRows = []\n    objOrigin.forEach((eachElem) => {\n      eachElem.forEach((eachElemLevel1) => {\n\n        let bufferElem = {price: eachElemLevel1.value, \n                          week: eachElemLevel1.priceBlockSequence, \n                          legend: eachElemLevel1.priceBlock\n                        }\n        \n        if( addElement( arrToteRows, eachElemLevel1.priceItemView, bufferElem ) ){\n          arrToteRows.push({\n            title: eachElemLevel1.priceItemView,\n            indexActive: null,\n            sub: eachElemLevel1.descriptionHelp, \n            additionalWeek:'$35 each additional week',\n            prices: [bufferElem]\n          })\n        }else{\n        }\n      })\n    })\n    toteBoxesData = arrToteRows\n    \n    dispatch({\n      type: \"UPDATE_TOTE_BOXES\",\n      payload: arrToteRows\n    })\n  };\n\n  useEffect(() => {\n\n    if(serviceTypes){\n\n      bufferObj = []\n\n      let serviceTypesRowLocal = serviceTypes.filter((serviceTypesRow) => {\n          return serviceTypesRow.priceBlockSequence === 1 && serviceTypesRow.isActive === true && serviceTypesRow.isOnline === true;\n      })\n      bufferObj.push(serviceTypesRowLocal)\n\n      let serviceTypesRowLocal2 = serviceTypes.filter((serviceTypesRow) => {\n        return serviceTypesRow.priceBlockSequence === 2 && serviceTypesRow.isActive === true && serviceTypesRow.isOnline === true;\n      })\n      bufferObj.push(serviceTypesRowLocal2)\n\n      let serviceTypesRowLocal3 = serviceTypes.filter((serviceTypesRow) => {\n        return serviceTypesRow.priceBlockSequence === 3 && serviceTypesRow.isActive === true && serviceTypesRow.isOnline === true;\n      })\n      bufferObj.push(serviceTypesRowLocal3)\n\n      let serviceTypesRowLocal4 = serviceTypes.filter((serviceTypesRow) => {\n        return serviceTypesRow.priceBlockSequence === 4 && serviceTypesRow.isActive === true && serviceTypesRow.isOnline === true;\n      })\n\n      bufferObj.push(serviceTypesRowLocal4)\n      setObjectBeforeRenderRows(bufferObj)\n    }\n    switchButtons()\n    \n  }, [serviceTypes])\n\n  \n  return (\n    <>\n      <Header title='Enter Personal Details' step=\"Two\"/>\n      <div className=\"introWrap\">\n        <h2>Order details</h2>\n        <p>Please select the applicable option(s) below.</p>\n      </div>\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          setToteBoxesInfo(values);\n          direction === 'back' ? prevStep() : nextStep();\n        }}\n        >\n        {() => (\n          <Form>\n            { (state.toteBoxesContent !== null) ? (\n              state.toteBoxesContent.map((toteRow, index) => {\n                return <ToteBoxesRow \n                            key={index} \n                            trackKey={index}\n                            dataObj={toteRow}\n                            updateSelectedBox={updateSelectedBox}\n                        />\n              })\n            ) : ( \n              <>\n                <div className=\"formControl fullLenght\">\n                    <label className=\"boldLabel\">Loading...</label>\n                    <p>Loading...</p>\n                    <div className=\"toteBoxes loadingToteBoxes\">\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                    </div>\n                    <p className=\"bottomCentered\">Loading..</p>\n                </div>\n                <div className=\"formControl fullLenght\">\n                    <label className=\"boldLabel\">Loading...</label>\n                    <p>Loading...</p>\n                    <div className=\"toteBoxes loadingToteBoxes\">\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                      <div className=\"eachToteItem\">\n                          <p>Week rental</p>\n                          <span className=\"price\">$ price</span>\n                      </div>\n                    </div>\n                    <p className=\"bottomCentered\">Loading..</p>\n                </div>\n\n              </>\n            )}\n            <div className=\"formControl\"></div>\n            <div className=\"formControl submitControl fullLenght\">\n              <button className=\"whiteBtn\" type=\"submit\" onClick={() => setDirection('back')}>\n                <span>Previous</span>\n              </button>\n              <button type=\"submit\" className={buttonClasses} onClick={() => setDirection('next')}>\n                <span>Next</span>\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\n","import React from 'react';\n\nexport const TimeOption = ({listClasses, trackKey, startAt, endAt, changeSelectedTime, closeCalendar}) => {\n\n    const clickTimeOpt = () => {\n        changeSelectedTime(trackKey)\n    }\n    return (\n        <>\n            <div className={listClasses}>\n                <div className=\"timeAvailable\" onClick={() => clickTimeOpt()}>\n                    <p>{startAt} - {endAt}</p>\n                </div>\n                <div className=\"timeSelected\">\n                    <div className=\"timeDetail\">\n                        <p>{startAt} - {endAt}</p>\n                    </div>\n                    <button className=\"button global\" onClick={(e) => {\n                        e.preventDefault()\n                        closeCalendar()\n                        }}>\n                        <span>Confirm</span>\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport DayPicker from \"react-day-picker\";\nimport axios from \"axios\";\nimport { TimeOption } from \"./TimeOption\";\nimport { GlobalContext } from \"../../context/FormContext\";\n\nlet dateAvailable = new Date();\nlet dateSuggested = '';\nlet theYear = new Date().getFullYear();\nlet theMonth = new Date().getMonth();\nlet formatedDay = '';\nconst dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\nconst dateOptionsNumeric = { year: 'numeric', month: '2-digit', day: '2-digit' };\n\nexport const EachBookingComponent = ({  formData,\n                                        controlType, \n                                        updateStateSchedulingStart, \n                                        updateStateSchedulingTime, \n                                        currentDate, \n                                        startingTime, \n                                        endingTime, \n                                        enabled,\n                                        setServiceWeeks,\n                                        arrayDisabled }) => {\n\n    const { state, dispatch } = useContext( GlobalContext );\n    const [selectedTime, setSelectedTime] = useState(null);\n    const [selectedTimeEnd, setSelectedTimeEnd] = useState(endingTime);\n    const [dateDropOff, setDateDropOff] = useState('');\n    const [openTimeLayerDrop, setOpenTimeLayerDrop] = useState(false);\n    const [showResumeInfo, setShowResumeInfo] = useState(false);\n    const [timeSpacesAvailable, setTimeSpacesAvailable] = useState(null);\n\n\n    const [disDaysDropOff, setDisDaysDropOff] = useState([]);\n    \n    const getDisabledDays = (day, zipCode) => {\n\n        let availabilityEndPoint = ''\n        let disableDaysList = []\n        let arrayFiltered = []\n        let dateNow = (new Date( day ).getTime() / 1000).toFixed(0)\n        dateNow = parseInt(dateNow)\n        let weekInSeconds = 10\n\n        weekInSeconds = ( weekInSeconds * 7 ) * 24 * 60 * 60;\n\n        let dateWithWeeks = parseInt(dateNow) + parseInt(weekInSeconds)\n\n        formatedDay = day.toLocaleDateString(undefined, dateOptionsNumeric)\n        formatedDay = formatedDay.split('/')\n        formatedDay = formatedDay[2] + formatedDay[0] + formatedDay[1]\n        let nowDayId = parseInt(formatedDay);\n        theYear = day.getFullYear()\n        theMonth = day.getMonth()\n\n        availabilityEndPoint = 'https://kingtote.vonigo.com/api/v1/resources/availability/?securityToken=' + \n                                state.securityToken + '&method=0&pageNo=1&pageSize=100&duration=60&dateStart=' +\n                                dateNow + '&dateEnd=' + dateWithWeeks + '&zip=' + zipCode + '&serviceTypeID=' +\n                                formData.locationType;\n\n        axios.get(availabilityEndPoint)\n            .then(res => {\n                if(res.data.Availability !== null && res.data.Availability !== undefined ){\n                    const getDateFromDayId = (value) => {\n                        let dateStr = ''+value\n                        let y = dateStr.substr(0,4)\n                        let m = parseInt(dateStr.substr(4,2))-1\n                        let d = dateStr.substr(6,2)\n                        return new Date(y,m,d)\n                    }\n                    const getDayIDFromDate = (dateVal) => {\n                        var x = dateVal;\n                        var y = x.getFullYear().toString();\n                        var m = (x.getMonth() + 1).toString();\n                        var d = x.getDate().toString();\n                        (d.length === 1) && (d = '0' + d);\n                        (m.length === 1) && (m = '0' + m);\n                        var yyyymmdd = y + m + d;\n                        return yyyymmdd;\n                    }\n                    \n                    for (let d=getDateFromDayId(nowDayId);d<new Date(dateWithWeeks*1000);d.setDate(d.getDate() + 1)){\n                        let filterDayID = getDayIDFromDate(d)\n                        arrayFiltered = res.data.Availability.filter(timeRow => timeRow.dayID === (''+filterDayID))\n                        if(arrayFiltered.length===0){\n                            disableDaysList.push(getDateFromDayId(filterDayID))\n                        }\n                    }\n                    setDisDaysDropOff(disableDaysList)\n                }\n            })\n            .catch(err => {\n                console.log('Error availability >>> ', err)\n            })\n        \n    };\n    \n    const addWeeks = (dt, n) => {\n        if(n){\n            return new Date(dt.setDate(dt.getDate() + (n * 7) ));\n        }\n        return new Date(dt.setDate(dt.getDate() + 1));\n    }\n\n    const getNumberOfWeeks = () => {\n        let maxNumber = 0\n        let arrSwitch = []\n        let bufferToteBoxesGlobalInfo = state.toteBoxesContent\n\n        if(!bufferToteBoxesGlobalInfo){\n            return maxNumber;\n        }\n\n        bufferToteBoxesGlobalInfo.forEach((eachElem) => {\n            if(eachElem.indexActive !== null) arrSwitch.push(eachElem.indexActive)\n        });\n\n        arrSwitch.forEach((eachDate) => {\n            if (eachDate !== null && eachDate > maxNumber) {\n                maxNumber = eachDate\n            }\n        });             \n        return maxNumber + 1\n    }\n\n    let openDetailedBooking = 'bookingComponent'\n\n    if(showResumeInfo){\n        openDetailedBooking = 'bookingComponent openDetailedBooking'\n    }\n    \n    let layerClassListDrop = 'calendarAndTimeWrap'\n\n    if(openTimeLayerDrop){\n        layerClassListDrop = 'calendarAndTimeWrap timeOn'\n    }\n\n    let calendarControlClasses = 'calendarLayer'\n\n    if( !enabled){\n        calendarControlClasses = 'calendarLayer disabled'\n\n    }else{\n        dateAvailable = (controlType === 'end') ?   addWeeks(new Date(formData.dateDropOff) )  \n                                                :   new Date()\n\n        dateSuggested = addWeeks(new Date(formData.dateDropOff), getNumberOfWeeks() )\n\n        setServiceWeeks( getNumberOfWeeks() )\n    }\n\n    const convertTo12HoursFormat = ( time ) => {\n\n        if(time === null) return\n\n        time = time.split(':')\n        time = (time[0].length === 1) ? '0'+time[0]+':' + time[1] : time[0]+':' + time[1]\n\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time]\n\n        if (time.length > 1) { \n            time = time.slice (1)\n            time[5] = +time[0] < 12 ? 'am' : 'pm'\n            time[0] = +time[0] % 12 || 12\n        }\n\n        return time.join('')\n    }\n\n    const timeConverter = (timeString, endTime) => {\n        let num = timeString;\n        let hours = (num / 60);\n        let rhours = Math.floor(hours);\n        let minutes = (hours - rhours) * 60;\n        let rminutes = Math.round(minutes);\n        rminutes = (rminutes === 30 ) ? rminutes : '00'\n        \n        return (endTime) ? (rhours+2) + \":\" + rminutes : rhours + \":\" + rminutes;\n    }\n\n    const handleDayClick = (day) => {\n\n        let availabilityEndPoint = ''\n        let arrayFiltered = []\n        let disableDaysList = []\n        let dateNow = (new Date( day ).getTime() / 1000).toFixed(0)\n        dateNow = parseInt(dateNow)\n        let weekInSeconds = getNumberOfWeeks()\n\n        weekInSeconds = ( weekInSeconds * 7 ) * 24 * 60 * 60;\n\n        let dateWithWeeks = parseInt(dateNow) + parseInt(weekInSeconds)\n\n        formatedDay = day.toLocaleDateString(undefined, dateOptionsNumeric)\n        formatedDay = formatedDay.split('/')\n        formatedDay = formatedDay[2] + formatedDay[0] + formatedDay[1]\n        let nowDayId = parseInt(formatedDay);\n        setTimeSpacesAvailable(null)\n        theYear = day.getFullYear()\n        theMonth = day.getMonth()\n\n        if(controlType === 'start'){\n\n            availabilityEndPoint = 'https://kingtote.vonigo.com/api/v1/resources/availability/?securityToken=' + \n                                    state.securityToken + '&method=0&pageNo=1&pageSize=100&duration=60&dateStart=' +\n                                    dateNow + '&dateEnd=' + dateWithWeeks + '&zip=' + formData.dropOff + '&serviceTypeID=' +\n                                    formData.locationType;\n\n            axios.get(availabilityEndPoint)\n                .then(res => {\n                    \n                    if(res.data.Availability !== null && res.data.Availability !== undefined ){\n\n                        const getDateFromDayId = (value) => {\n                            let dateStr = ''+value\n                            let y = dateStr.substr(0,4)\n                            let m = parseInt(dateStr.substr(4,2))-1\n                            let d = dateStr.substr(6,2)\n                            return new Date(y,m,d)\n                        }\n                        const getDayIDFromDate = (dateVal) => {\n                            var x = dateVal;\n                            var y = x.getFullYear().toString();\n                            var m = (x.getMonth() + 1).toString();\n                            var d = x.getDate().toString();\n                            (d.length === 1) && (d = '0' + d);\n                            (m.length === 1) && (m = '0' + m);\n                            var yyyymmdd = y + m + d;\n                            return yyyymmdd;\n                        }\n                        \n                        for (let d=getDateFromDayId(nowDayId);d<new Date(dateWithWeeks*1000);d.setDate(d.getDate() + 1)){\n                            let filterDayID = getDayIDFromDate(d)\n                            arrayFiltered = res.data.Availability.filter(timeRow => timeRow.dayID === (''+filterDayID))\n                            if(arrayFiltered.length===0){\n                                disableDaysList.push(getDateFromDayId(filterDayID))\n                            }\n                        }\n\n                        getDisabledDays(day, formData.pickUp)\n                        arrayFiltered = res.data.Availability.filter(timeRow => timeRow.dayID === formatedDay)\n                        setTimeSpacesAvailable(arrayFiltered)\n                        \n                    }\n                })\n                .catch(err => {\n                    console.log('Error availability >>> ', err)\n                })\n        }else{\n            \n            dateWithWeeks = dateNow + 86400\n\n            availabilityEndPoint = 'https://kingtote.vonigo.com/api/v1/resources/availability/?securityToken=' + \n                                    state.securityToken + '&method=0&pageNo=1&pageSize=100&duration=60&dateStart=' +\n                                    dateNow + '&dateEnd=' + dateWithWeeks + '&zip=' + formData.pickUp + '&serviceTypeID=' +\n                                    formData.locationType;\n\n            axios.get(availabilityEndPoint)\n                .then(res => {\n                    if(res.data.Availability !== null && res.data.Availability !== undefined ){\n                        \n                        arrayFiltered = res.data.Availability.filter(timeRow => timeRow.dayID === formatedDay)\n                        setTimeSpacesAvailable(arrayFiltered)\n                    }\n                })\n                .catch(err => {\n                    console.log('Error availability >>> ', err)\n                })\n        }\n\n        setOpenTimeLayerDrop(true)\n        setDateDropOff(day.toLocaleDateString(undefined, dateOptions))\n    };\n\n    const closeCalendar = () => {\n        setOpenTimeLayerDrop(false)\n        setShowResumeInfo(true)\n        updateStateSchedulingStart({kind: controlType, stringDate: dateDropOff, arr: disDaysDropOff})\n    };\n\n    const changeSelectedTime = (key) => {\n\n        setSelectedTime(key)\n        setSelectedTimeEnd( timeSpacesAvailable[key].startTime)\n        updateStateSchedulingTime({ kind: controlType, \n                                    stringTimeStart: timeSpacesAvailable[key].startTime, \n                                    stringTimeEnd: timeSpacesAvailable[key].startTime})\n        \n        if(controlType === 'start'){\n            dispatch({\n                type: \"SET_DROP_OFF\",\n                payload: timeSpacesAvailable[key]\n            })\n        }else{\n            dispatch({\n                type: \"SET_PICK_UP\",\n                payload: timeSpacesAvailable[key]\n            })\n        }\n    };\n\n    const resetControl = () => {\n        setShowResumeInfo(false)\n        if(controlType === 'start'){\n            updateStateSchedulingStart({kind: 'end', stringDate: null})\n            setSelectedTime(null)\n        }\n    }\n\n    useEffect(() => {\n        if(currentDate !== null){\n            setOpenTimeLayerDrop(false)\n            setShowResumeInfo(true)\n            setDateDropOff(currentDate)\n        }else{\n            if(controlType === 'end'){\n                setShowResumeInfo(false)\n                setSelectedTime(null)\n            }\n        }\n    }, [currentDate])\n\n    useEffect(() => {\n\n        getDisabledDays(new Date(), formData.dropOff)\n        \n    }, [])\n\n    return (\n        <>  \n            <div className={openDetailedBooking}>\n                <div className=\"dateAndTimeSelected\">\n                    <p className=\"dateSelected\">{dateDropOff}\n                        <br/>\n                        between { convertTo12HoursFormat( timeConverter(selectedTimeEnd)) } - { convertTo12HoursFormat( timeConverter(selectedTimeEnd, 'endTime')) }\n                    </p>\n                    <span className=\"iconEditTime\" onClick={() => resetControl() }>\n                    </span>\n                </div>\n                <div className={layerClassListDrop}>\n                    <div className={calendarControlClasses}>\n                        {(controlType==='start') ? (\n                            <DayPicker \n                                onDayClick={handleDayClick}\n                                disabledDays={[\n                                    ...disDaysDropOff,\n                                    {\n                                        before: dateAvailable,\n                                    }\n                                ]}\n                            />\n                            ) : (\n                            <DayPicker \n                                className=\"endCalendar\"\n                                onDayClick={handleDayClick}\n                                month={new Date( theYear, (new Date(dateSuggested)).getMonth())}\n                                selectedDays={new Date(dateSuggested)}\n                                disabledDays={[\n                                    ...arrayDisabled,\n                                    {\n                                        before: dateAvailable,\n                                    }\n                                ]}\n                            />\n                        )}\n                        <div className=\"hideCalendar\"></div>\n                    </div>\n                    <div className=\"timeLayer\">\n                        <br/>\n                        <p className=\"dateSelected\" onClick={() => setOpenTimeLayerDrop(false)}><span>&#60;</span>  {dateDropOff}</p>\n                        <div className=\"timeOptionsWrap\">\n                            {(() => {\n                                if (timeSpacesAvailable !== null && timeSpacesAvailable.length > 0) {\n                                    return (\n                                        timeSpacesAvailable\n                                            .map((timeRow, index) => {\n                                                return <TimeOption \n                                                            listClasses={selectedTime === index ? 'timeOption openSelectedDetail' : 'timeOption'}\n                                                            key={index} \n                                                            trackKey={index}\n                                                            startAt={ convertTo12HoursFormat( timeConverter(timeRow.startTime)) } \n                                                            endAt={ convertTo12HoursFormat( timeConverter(timeRow.startTime, 'endTime')) } \n                                                            changeSelectedTime={changeSelectedTime}\n                                                            closeCalendar={closeCalendar}\n                                                        />\n                                        })\n                                    )\n                                } else if (timeSpacesAvailable !== null && timeSpacesAvailable.length === 0) {\n                                    return (\n                                        <div className=\"calendarAndTimeWrap\">\n                                            <div className=\"timeAvailable\">\n                                                <p>No schedules available.</p>\n                                            </div>\n                                        </div>\n                                    )\n                                } else {\n                                    return (\n                                        <div className=\"calendarAndTimeWrap\">\n                                            <div className=\"timeAvailable\">\n                                                <p>Loading...</p>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            })() }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from 'react';\nimport { EachBookingComponent } from './EachBookingComponent'\n\nexport const CalendarControlsWrap = ({\n    formData,\n    setFormData,\n    origin,\n    parentFunction\n    }) => {\n        const [schedulingSummaryLocal, setSchedulingSummaryLocal] = useState( (formData.schedulingSummary === null) ? 0 : formData.schedulingSummary);\n        const [serviceWeeks, setServiceWeeks] = useState(0)\n        const calculateDays = (endDate) => {\n            let dt1Full = new Date(formData.dateDropOff)\n            let dt2Full = new Date(endDate)\n            dt1Full = Math.round(( dt2Full - dt1Full) / (1000*60*60*24))\n            return dt1Full\n        }\n        const [enableCalendar, setEnableCalendar] = useState( (formData.dateDropOff === null) ? false : true );\n\n        const [arrayDisabled, setArrayDisabled] = useState([])\n\n        \n        const updateStateSchedulingStart = ( dateData ) => {\n            if(dateData.kind === 'start'){\n                setEnableCalendar(true)\n                setFormData({\n                    ...formData,\n                    'dateDropOff': dateData.stringDate\n                });\n                calculateDays(0)\n\n                setArrayDisabled(dateData.arr)\n                \n            }else{\n                if(dateData.stringDate === null){\n                    setEnableCalendar(false)\n                }else{\n                    setSchedulingSummaryLocal( calculateDays(dateData.stringDate) )\n                }\n                setFormData({\n                    ...formData,\n                    'datePickUp': dateData.stringDate,\n                    'schedulingSummary': calculateDays(dateData.stringDate)\n                });\n            }\n            if(origin === 'Scheduling') parentFunction(dateData)\n        }\n        const updateStateSchedulingTime = (timeData) => {\n            if(timeData.kind === 'start'){\n                setFormData({\n                    ...formData,\n                    'timeRangeDropStart': timeData.stringTimeStart,\n                    'timeRangeDropEnd': timeData.stringTimeEnd\n                });\n            }else{\n                setFormData({\n                    ...formData,\n                    'timeRangePickStart': timeData.stringTimeStart,\n                    'timeRangePickEnd': timeData.stringTimeEnd\n                });\n            }\n        }\n    return (\n        <>\n            <div className=\"formControl\">\n                <label className=\"boldLabelCalendar\">Select Drop-off Date/Time</label>\n                <EachBookingComponent\n                    formData={formData}\n                    updateStateSchedulingStart={updateStateSchedulingStart} \n                    updateStateSchedulingTime={updateStateSchedulingTime} \n                    controlType=\"start\" \n                    currentDate={formData.dateDropOff}\n                    startingTime={formData.timeRangeDropStart}\n                    endingTime={formData.timeRangeDropEnd}\n                    enabled={true}\n                    setServiceWeeks={setServiceWeeks}\n                    arrayDisabled={arrayDisabled}\n                    />\n            </div>\n            <div className=\"formControl\">\n                <label className=\"boldLabelCalendar\">Select Pick-up Date/Time</label>\n                <EachBookingComponent\n                    formData={formData}\n                    updateStateSchedulingStart={updateStateSchedulingStart} \n                    updateStateSchedulingTime={updateStateSchedulingTime} \n                    controlType=\"end\" \n                    currentDate={formData.datePickUp}\n                    startingTime={formData.timeRangePickStart}\n                    endingTime={formData.timeRangePickEnd}\n                    enabled={enableCalendar}\n                    setServiceWeeks={setServiceWeeks}\n                    arrayDisabled={arrayDisabled}\n                    />\n            </div>\n            <div className=\"formControl\">\n                <label className=\"boldLabelCalendar\">Scheduling Summary</label>\n                <p>{(schedulingSummaryLocal > 0) ? schedulingSummaryLocal : 0 } days total</p>\n                {\n                    (schedulingSummaryLocal > 0 && (schedulingSummaryLocal/serviceWeeks) > 7 ) ? (\n                        <p><strong>You have selected more days than your original package and are subject to additional charges</strong></p>\n                    ) : ''\n                }\n            </div>\n            {/* {\n            (origin === 'Scheduling') ? (\n                <div className=\"formControl\">\n                    <label className=\"boldLabelCalendar\">Scheduling Summary</label>\n                    <p>{(schedulingSummaryLocal > 0) ? schedulingSummaryLocal : 0 } days total</p>\n                    {\n                        (schedulingSummaryLocal > 0 && (schedulingSummaryLocal/serviceWeeks) > 7 ) ? (\n                            <p><strong>You have selected more days than your original package and are subject to additional charges</strong></p>\n                        ) : ''\n                    }\n                </div>\n            ) : ''\n            } */}\n        </>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport { Header } from './Header';\nimport \"react-day-picker/lib/style.css\";\nimport { CalendarControlsWrap } from './bookingControls/CalendarControlsWrap';\n\nexport const Scheduling = ({\n    formData,\n    setFormData,\n    nextStep,\n    prevStep\n    }) => {\n    const [direction, setDirection] = useState('back');\n    const [nextButtonDisabled, setNextButtonDisabled] = useState(true);\n    let buttonClasses = (nextButtonDisabled) ? 'disabled' : ''\n    if(formData.dateDropOff !== null && formData.datePickUp !== null) {\n        buttonClasses = ''\n    }\n    const parentFunction = ( dateData ) => {\n        if(dateData.kind === 'end'){\n            if(dateData.stringDate === null){\n                setNextButtonDisabled(true)\n            }else{\n                setNextButtonDisabled(false)\n            }\n        }\n    }\n    useEffect(() => {\n        window.scrollTo({\n            behavior: \"smooth\",\n            top: 0\n        });\n    }, []);\n\n    return (\n        <>\n        <Header title='Enter Personal Details' step=\"Three\"/>\n        <div className=\"introWrap\">\n            <h2>Scheduling</h2>\n            <p>Please select a date and time to drop-off and pick-up totes</p>\n        </div>\n            <Formik\n                initialValues={formData}\n                onSubmit={values => {\n                    direction === 'back' ? prevStep() : nextStep();\n                }}\n            >\n            {() => (\n                <Form>\n                    <CalendarControlsWrap\n                        formData={formData}\n                        setFormData={setFormData}\n                        origin=\"Scheduling\"\n                        parentFunction={parentFunction}\n                    />\n                    <div className=\"formControl submitControl fullLenght\">\n                    <button className=\"whiteBtn\" type=\"submit\" onClick={() => prevStep()}>\n                        <span>Previous</span>\n                    </button>\n                    <button className={buttonClasses} type=\"submit\" onClick={() => setDirection('next')}>\n                        <span>Next</span>\n                    </button>\n                    </div>\n                </Form>\n            )}\n        </Formik>\n        </>\n    );\n};\n\nScheduling.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n  prevStep: PropTypes.func.isRequired\n};\n","import React, { useState, useEffect } from 'react';\nimport { Header } from './Header';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchemaFourthStep = yup.object({\n  firstNameField: yup\n    .string()\n    .required('First name is required'),\n  lastNameField: yup\n    .string()\n    .required('Last name is required'),\n  telField: yup\n    .string()\n    .required('Telephone is required'),\n  emailField: yup\n    .string()\n    .required('Email is required'),\n  addressDropOffField: yup\n    .string()\n    .required('Address is required'),\n  cityDropOffField: yup\n    .string()\n    .required('City is required'),\n  stateDropOffField: yup\n    .string()\n    .required('State is required'),\n  addressPickUpField: yup\n    .string()\n    .required('Address is required'),\n  cityPickUpField: yup\n    .string()\n    .required('City is required'),\n  statePickUpField: yup\n    .string()\n    .required('State is required')\n});\n\nconst validateAddress = value => {\n\n  let error;\n    if (!value) {\n      error = 'Street is required';\n    } \n    return error;\n};\n\nconst validateCity = value => {\n\n  let error;\n    if (!value) {\n      error = 'City is required';\n    } \n    return error;\n};\n\nconst validateZipCode = value => {\n\n  let stringValue = value + ''\n  let error;\n    if (!value) {\n      error = 'Drop off required';\n    } else if (stringValue.length > 5) {\n      error = 'postal code is 5 digits';\n    } else if (stringValue.length < 5) {\n      error = 'postal code is 5 digits';\n    }\n    return error;\n};\n\nconst validateState = value => {\n\n  let error;\n    if (!value) {\n      error = 'State is required';\n    } \n    return error;\n};\n\nconst validateName = value => {\n\n  let error;\n    if (!value) {\n      error = 'First name is required';\n    } \n    return error;\n};\n\nconst validateLastName = value => {\n\n  let error;\n    if (!value) {\n      error = 'Last name is required';\n    } \n    return error;\n};\n\nconst validateTelephone = value => {\n\n  let error;\n    if (!value) {\n      error = 'Telephone is required';\n    } \n    return error;\n};\n\nconst validateEmail = value => {\n\n  let error;\n    if (!value) {\n      error = 'Email name is required';\n    } \n    return error;\n};\n\nexport const AddressFormStep = ({\n    formData,\n    setFormData,\n    nextStep,\n    prevStep\n    }) => {\n    const [direction, setDirection] = useState('back');\n    const [openHideFieldsBillingAddress, setOpenHideFieldsBillingAddress] = useState(formData.sameAddressAsDropOff);\n    const [openHideFieldsDropOff, setOpenHideFieldsDropOff] = useState(formData.sameAsMainContactDropOff);\n    const [openHideFieldsPickUp, setOpenHideFieldsPickUp] = useState(formData.sameAsMainContactPickUp);\n\n\n  useEffect(() => {\n    window.scrollTo({\n        behavior: \"smooth\",\n        top: 0\n    });\n  }, []);\n    \n  return (\n    <>\n      <Header title='Enter Personal Details' step=\"Four\" />\n      <div className=\"introWrap\">\n        <h2>Your Details</h2>\n        <p>Please fill out your contact information and Delivery and Pick-Up addresses</p>\n      </div>\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          setFormData(values);\n          direction === 'back' ? prevStep() : nextStep();\n        }}\n        validationSchema={ validationSchemaFourthStep }\n        >\n        {({ errors, touched }) => (\n          <Form className=\"fifthForm\">\n\n            <div className=\"inlineFifth\">\n              <div className=\"leftFields\">\n\n              <div className=\"formControl\">\n                  <h3>Main Contact Information</h3>\n                  <label htmlFor=\"firstNameInput\">First Name</label>\n                  <Field \n                    id=\"firstNameInput\"\n                    name='firstNameField' \n                    placeholder=\"Jane\"\n                    />\n                  {errors.firstNameField && touched.firstNameField && <div className=\"errorMessage\">{errors.firstNameField}</div>}\n              </div>\n              <div className=\"formControl\">\n              </div>\n              <div className=\"formControl\">\n                  <label htmlFor=\"lastNameInput\">Last Name</label>\n                  <Field \n                    id=\"lastNameInput\"\n                    name='lastNameField' \n                    placeholder=\"Doe\"\n                    />\n                    {errors.lastNameField && touched.lastNameField && <div className=\"errorMessage\">{errors.lastNameField}</div>}\n              \n              </div>\n              <div className=\"formControl\">\n              </div>\n              <div className=\"formControl\">\n                <label htmlFor=\"telInput\">Phone</label>\n                <Field \n                      id=\"telInput\"\n                      name='telField' \n                      placeholder=\"(555) 555 555\"\n                      type=\"tel\"\n                      />\n                      {errors.telField && touched.telField && <div className=\"errorMessage\">{errors.telField}</div>}\n                </div>\n                <div className=\"formControl\">\n                </div>\n                <div className=\"formControl\">\n                    <label htmlFor=\"emailInput\">Email</label>\n                    <Field \n                      id=\"emailInput\"\n                      name='emailField' \n                      placeholder=\"hello@hello.com\"\n                      type=\"email\"\n                      />\n                      {errors.emailField && touched.emailField && <div className=\"errorMessage\">{errors.emailField}</div>}\n                </div>\n                <div className=\"formControl\">\n                </div>\n\n            </div>\n\n              <div className=\"rightFields\">\n\n                <div className=\"formControl\">\n                  <h3>Billing Address</h3>\n                  <div className=\"ratioWrap checkboxInline\">\n                    <Field \n                      id=\"sameAddressAsDropOff\"\n                      name='sameAddressAsDropOff' \n                      type=\"checkbox\"\n                      onClick={() => {\n                        setOpenHideFieldsBillingAddress(!openHideFieldsBillingAddress)\n                        } \n                      }\n                      />\n                    <label htmlFor=\"sameAddressAsDropOff\">Same as Drop-off Address</label>\n                  </div>\n                </div>\n                {\n                  (openHideFieldsBillingAddress) ? (\n                    ''\n                  ) : (\n                    <>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"billingAddressField\">Street Address</label>\n                        <Field \n                          id=\"billingAddressField\"\n                          name='billingAddressField' \n                          placeholder=\"Street Address\"\n                          validate={validateAddress}\n                          />\n                          {errors.billingAddressField && touched.billingAddressField && <div className=\"errorMessage\">{errors.billingAddressField}</div>}\n                      </div>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"billingCityField\">City</label>\n                        <Field \n                          id=\"billingCityField\"\n                          name='billingCityField' \n                          placeholder=\"city\"\n                          validate={validateCity}\n                          />\n                          {errors.billingCityField && touched.billingCityField && <div className=\"errorMessage\">{errors.billingCityField}</div>}\n                      </div>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"billingStateField\">State</label>\n                        <Field \n                          id=\"billingStateField\"\n                          name='billingStateField' \n                          placeholder=\"state\"\n                          validate={validateState}\n                          />\n                          {errors.billingStateField && touched.billingStateField && <div className=\"errorMessage\">{errors.billingStateField}</div>}\n                      </div>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"billingAddressZipField\">Zip Code</label>\n                        <Field \n                          id=\"billingAddressZipField\"\n                          name='billingAddressZipField' \n                          placeholder=\"zip code\"\n                          type=\"number\"\n                          validate={validateZipCode}\n                          />\n                          {errors.billingAddressZipField && touched.billingAddressZipField && <div className=\"errorMessage\">{errors.billingAddressZipField}</div>}\n                      </div>\n                    </>\n                  )\n                }\n            </div>\n          </div>\n\n            {/*   Drop-off Address   */}\n\n            <div className=\"inlineFifth\">\n              <div className=\"leftFields\">\n\n                <div className=\"formControl\">\n                  <h3>Drop-off Address</h3>\n                  <label htmlFor=\"addressDropOffImput\">Street Address</label>\n                  <Field \n                    id=\"addresslDropOffInput\"\n                    name='addressDropOffField' \n                    placeholder=\"Street Address\"\n                    />\n                    {errors.addressDropOffField && touched.addressDropOffField && <div className=\"errorMessage\">{errors.addressDropOffField}</div>}\n                </div>\n                <div className=\"formControl\">\n                  <label htmlFor=\"cityDropOffImput\">City</label>\n                  <Field \n                    id=\"cityDropOffInput\"\n                    name='cityDropOffField' \n                    placeholder=\"city\"\n                    />\n                    {errors.cityDropOffField && touched.cityDropOffField && <div className=\"errorMessage\">{errors.cityDropOffField}</div>}\n                </div>\n                <div className=\"formControl\">\n                  <label htmlFor=\"stateDropOffImput\">State</label>\n                  <Field \n                    id=\"stateDropOffInput\"\n                    name='stateDropOffField' \n                    placeholder=\"state\"\n                    />\n                    {errors.stateDropOffField && touched.stateDropOffField && <div className=\"errorMessage\">{errors.stateDropOffField}</div>}\n                </div>\n\n                <div className=\"formControl\">\n                  <label htmlFor=\"dropOff\">Zip Code</label>\n                  <Field \n                    name='zipCodeDropOff' \n                    placeholder=\"zip code\"\n                    type=\"number\"\n                    validate={validateZipCode}\n                    />\n                    {errors.zipCodeDropOff && touched.zipCodeDropOff && <div className=\"errorMessage\">{errors.zipCodeDropOff}</div>}\n                </div>\n                <div className=\"formControl\">\n                  <label htmlFor=\"dropOff\">Additional Information</label>\n                  <Field \n                    name='textareaDropOff' \n                    placeholder=\"Additional notes, special instructions, gate code, etc\"\n                    component=\"textarea\"\n                    />\n                    {errors.textareaDropOff && touched.textareaDropOff && <div className=\"errorMessage\">{errors.textareaDropOff}</div>}\n                </div>\n\n              </div>\n              \n              <div className=\"rightFields\">\n\n                <div className=\"formControl\">\n                  <h3>Drop-off Contact</h3>\n                  <div className=\"ratioWrap checkboxInline\">\n                    <Field \n                      id=\"sameAsMainDropOff\"\n                      name='sameAsMainContactDropOff' \n                      type=\"checkbox\"\n                      onClick={() => {\n                        setOpenHideFieldsDropOff(!openHideFieldsDropOff)\n                        } \n                      }\n                      />\n                    <label htmlFor=\"sameAsMainDropOff\">Same as Main Contact Info</label>\n                  </div>\n                </div>\n                {\n                  (openHideFieldsDropOff) ? (\n                    ''\n                  ) : (\n                    <>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"firstNameFieldDifferentDrop\">First Name</label>\n                        <Field \n                          id=\"firstNameFieldDifferentDrop\"\n                          name='firstNameFieldDifferentDrop' \n                          placeholder=\"Jane\"\n                          validate={validateName}\n                          />\n                          {errors.firstNameFieldDifferentDrop && touched.firstNameFieldDifferentDrop && <div className=\"errorMessage\">{errors.firstNameFieldDifferentDrop}</div>}\n                      </div>\n                      <div className=\"formControl\">\n                          <label htmlFor=\"lastNameFieldDifferentDrop\">Last Name</label>\n                          <Field \n                            id=\"lastNameFieldDifferentDrop\"\n                            name='lastNameFieldDifferentDrop' \n                            placeholder=\"Doe\"\n                            validate={validateLastName}\n                            />\n                            {errors.lastNameFieldDifferentDrop && touched.lastNameFieldDifferentDrop && <div className=\"errorMessage\">{errors.lastNameFieldDifferentDrop}</div>}\n                      </div>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"telFieldDifferentDrop\">Phone</label>\n                        <Field \n                          id=\"telFieldDifferentDrop\"\n                          name='telFieldDifferentDrop' \n                          placeholder=\"(555) 555 555\"\n                          type=\"tel\"\n                          validate={validateTelephone}\n                          />\n                        {errors.telFieldDifferentDrop && touched.telFieldDifferentDrop && <div className=\"errorMessage\">{errors.telFieldDifferentDrop}</div>}\n                      </div>\n                      <div className=\"formControl\">\n                        <label htmlFor=\"emailFieldDifferentDrop\">Email</label>\n                        <Field \n                          id=\"emailFieldDifferentDrop\"\n                          name='emailFieldDifferentDrop' \n                          placeholder=\"hello@hello.com\"\n                          type=\"email\"\n                          validate={validateEmail}\n                          />\n                          {errors.emailFieldDifferentDrop && touched.emailFieldDifferentDrop && <div className=\"errorMessage\">{errors.emailFieldDifferentDrop}</div>}\n                      </div>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n\n            {/* Pick-up Address */}\n\n            <div className=\"inlineFifth\">\n              <div className=\"leftFields\">\n                <div className=\"formControl\">\n                  <h3>Pick-up Address</h3>\n                  <label htmlFor=\"addressPickUpImput\">Street Address</label>\n                  <Field \n                    id=\"addresslPickUpInput\"\n                    name='addressPickUpField' \n                    placeholder=\"Street Address\"\n                    />\n                    {errors.addressPickUpField && touched.addressPickUpField && <div className=\"errorMessage\">{errors.addressPickUpField}</div>}\n                </div>\n                <div className=\"formControl\">\n                  <label htmlFor=\"cityPickUpImput\">City</label>\n                  <Field \n                    id=\"cityPickUpInput\"\n                    name='cityPickUpField' \n                    placeholder=\"city\"\n                    />\n                    {errors.cityPickUpField && touched.cityPickUpField && <div className=\"errorMessage\">{errors.cityPickUpField}</div>}\n                </div>\n                <div className=\"formControl\">\n                  <label htmlFor=\"statePickUpImput\">State</label>\n                  <Field \n                    id=\"statePickUpInput\"\n                    name='statePickUpField' \n                    placeholder=\"state\"\n                    />\n                    {errors.statePickUpField && touched.statePickUpField && <div className=\"errorMessage\">{errors.statePickUpField}</div>}\n                </div>\n                <div className=\"formControl\">\n                  <label htmlFor=\"dropOff\">Zip Code</label>\n                  <Field \n                    name='zipCodePickUp' \n                    placeholder=\"zip code\"\n                    type=\"number\"\n                    validate={validateZipCode}\n                    />\n                    {errors.zipCodePickUp && touched.zipCodePickUp && <div className=\"errorMessage\">{errors.zipCodePickUp}</div>}\n                </div>\n                \n                <div className=\"formControl\">\n                  <label htmlFor=\"dropOff\">Additional Information</label>\n                  <Field \n                    name='textareaPickUp' \n                    placeholder=\"Additional notes, special instructions, gate code, etc\"\n                    component=\"textarea\"\n                    />\n                    {/* {errors.textareaDropOff && touched.textareaDropOff && <div className=\"errorMessage\">{errors.textareaDropOff}</div>} */}\n                </div>\n\n              </div>\n\n              <div className=\"rightFields\">\n\n                <div className=\"formControl\">\n                  <h3>Pick-up Contact</h3>\n                  <div className=\"ratioWrap checkboxInline\">\n                    <Field \n                      id=\"sameAsMainPick\"\n                      name='sameAsMainContactPickUp' \n                      type=\"checkbox\"\n                      onClick={() => {\n                        setOpenHideFieldsPickUp(!openHideFieldsPickUp)\n                        }\n                      }\n                      />\n                    <label htmlFor=\"sameAsMainPick\">Same as Main Contact Info</label>\n                  </div>\n                </div>\n                {\n                  (openHideFieldsPickUp) ? (\n                    ''\n                  ) : (\n                    <>\n                    <div className=\"formControl\">\n                      <label htmlFor=\"firstNameFieldDifferentPickUp\">First Name</label>\n                      <Field \n                        id=\"firstNameFieldDifferentPickUp\"\n                        name='firstNameFieldDifferentPickUp' \n                        placeholder=\"Jane\"\n                        validate={validateName}\n                        />\n                        {errors.firstNameFieldDifferentPickUp && touched.firstNameFieldDifferentPickUp && <div className=\"errorMessage\">{errors.firstNameFieldDifferentPickUp}</div>}\n                    </div>\n                    <div className=\"formControl\">\n                      <label htmlFor=\"lastNameFieldDifferentPickUp\">Last Name</label>\n                      <Field \n                        id=\"lastNameFieldDifferentPickUp\"\n                        name='lastNameFieldDifferentPickUp' \n                        placeholder=\"Doe\"\n                        validate={validateLastName}\n                        />\n                        {errors.lastNameFieldDifferentPickUp && touched.lastNameFieldDifferentPickUp && <div className=\"errorMessage\">{errors.lastNameFieldDifferentPickUp}</div>}\n\n                    </div>\n                    <div className=\"formControl\">\n                      <label htmlFor=\"telFieldDifferentPickUp\">Phone</label>\n                      <Field \n                        id=\"telFieldDifferentPickUp\"\n                        name='telFieldDifferentPickUp' \n                        placeholder=\"(555) 555 555\"\n                        type=\"tel\"\n                        validate={validateTelephone}\n                        />\n                        {errors.telFieldDifferentPickUp && touched.telFieldDifferentPickUp && <div className=\"errorMessage\">{errors.telFieldDifferentPickUp}</div>}\n                    </div>\n                    <div className=\"formControl\">\n                      <label htmlFor=\"emailFieldDifferentPickUp\">Email</label>\n                      <Field \n                        id=\"emailFieldDifferentPickUp\"\n                        name='emailFieldDifferentPickUp' \n                        placeholder=\"hello@hello.com\"\n                        type=\"email\"\n                        validate={validateEmail}\n                        />\n                        {errors.emailFieldDifferentPickUp && touched.emailFieldDifferentPickUp && <div className=\"errorMessage\">{errors.emailFieldDifferentPickUp}</div>}\n                    </div>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n            \n            <div className=\"formControl submitControl fullLenght\">\n              <button className=\"whiteBtn\" type=\"submit\" onClick={() => prevStep()}>\n                <span>Previous</span>\n              </button>\n              <button type=\"submit\" onClick={() => setDirection('next')}>\n                <span>Next</span>\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","export const merchantName_17 = '6b4Mb5Kh'\nexport const merchantKey_17 = '4x986p8P6N23ZfCe'\nexport const authNetURL = 'https://api.authorize.net/xml/v1/request.api?'\nexport const merchantName_21 = '7p3Vh34wHD'\nexport const merchantKey_21 = '64HsC4w7H49x2nWx'\nexport const merchantName_20 = '44Q44dVve'\nexport const merchantKey_20 = '2rG889a6g4rJG3Pw'","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Header } from './Header';\n\nconst useStyles = makeStyles(theme => ({\n  textCenter: {\n    textAlign: 'center'\n  }\n}));\n\nexport const Success = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.textCenter}>\n      <Header title='Success' step=\"Five\"/>\n      <h1>Thank You For Your Submission</h1>\n      \n    </div>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { FormUserDetails } from './FormUserDetails';\nimport { FormToteDetails } from './FormToteDetails';\nimport { Scheduling } from './Scheduling';\nimport { AddressFormStep } from './AddressFormStep';\nimport { Confirm } from './Confirm';\nimport { Success } from './Success';\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/FormContext\";\n\nexport const UserForm = () => {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    serviceArea: '',\n    dropOff: '',\n    pickUp: '',\n    locationType: '16',\n\n    firstNameField: '',\n    lastNameField: '',\n    telField: '',\n    emailField: '',\n    sameAddressAsDropOff: false,\n    billingAddressField: '',\n    billingCityField: '',\n    billingStateField: '',\n    billingAddressZipField: '',\n\n    addressDropOffField: '',\n    sameAsMainContactDropOff: true,\n    cityDropOffField: '',\n    stateDropOffField: '',\n    zipCodeDropOff: '',\n    textareaDropOff: '',\n\n    addressPickUpField: '',\n    sameAsMainContactPickUp: true,\n    cityPickUpField: '',\n    statePickUpField: '',\n    zipCodePickUp: '',\n    textareaPickUp: '',\n\n    firstNameFieldDifferentDrop: '',\n    lastNameFieldDifferentDrop: '',\n    telFieldDifferentDrop: '',\n    emailFieldDifferentDrop: '',\n\n    firstNameFieldDifferentPickUp: '',\n    lastNameFieldDifferentPickUp: '',\n    telFieldDifferentPickUp: '',\n    emailFieldDifferentPickUp: '',\n\n    cardHolderNameField: '',\n    cardNumberField: '',\n    expirationDateField: '',\n    cvcField: '',\n    \n    dateDropOff: null,\n    datePickUp: null,\n    timeRangeDropStart: null,\n    timeRangeDropEnd: null,\n    timeRangePickStart: null,\n    timeRangePickEnd: null,\n    schedulingSummary: null,\n    securityToken: null,\n    promoCodeField: ''\n  });\n\n  const { dispatch } = useContext(GlobalContext);\n  const nextStep = () => setStep(prev => prev + 1);\n  const prevStep = () => setStep(prev => prev - 1);\n\n  //const tokenEndPoint = 'https://kingtote.vonigo.com/api/v1/security/login/?appVersion=1company=Vonigo&password=a8b58ed9ef2fffb4a5ddb88626fa2727&userName=King.tote'\n  const tokenEndPoint = 'https://kingtote.vonigo.com/api/v1/security/login/?appVersion=1company=Vonigo&password=de1485461568b6ce64c6687e98a9e194&userName=API.User'\n  \n  const [tokenGenerated, setTokenGenerated] = useState(null);\n  const [franchises, setFranchises] = useState(null);\n  const [zips, setZips] = useState(null);\n  const [serviceTypes, setServiceTypes] = useState(null);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(null);\n  const [resetCalendars, setResetCalendars] = useState(false);\n\n\n  useEffect(() => {\n\n    const generateToken = async () => {\n\n      try {\n        const res = await axios.get(tokenEndPoint)\n        setTokenGenerated(res.data.securityToken);\n        setLoad(true);\n\n        dispatch({\n          type: \"SET_TOKEN\",\n          payload: res.data.securityToken\n        })\n      } catch (err) {\n          console.error(err);\n          setError(err.message);\n          setLoad(true)\n      }\n    }\n    generateToken();\n\n  }, []);\n\n  useEffect(() => {\n\n    let franchisesEndPoint = 'https://kingtote.vonigo.com/api/v1/resources/franchises/?securityToken='+ tokenGenerated + '&pageNo=1&pageSize=50&method=0'\n    \n    if(tokenGenerated){\n        axios.get(franchisesEndPoint)\n            .then(res => {\n              if(res.data !== null){\n                setFranchises(res.data.Franchises)\n              }\n              setLoad(true);\n            })\n            .catch(err => {\n                setError(err.message);\n                setLoad(true)\n            })\n\n        // setFormData({\n        //   ...formData,\n        //   'securityToken': tokenGenerated\n        // });\n\n    }else{\n      if(!load && error !== null){\n        //window.location.reload();\n        console.log('reload...')\n      }\n    }\n    \n  }, [tokenGenerated]);\n\n  useEffect(() => {\n\n    let zipCodeEndPoint = 'https://kingtote.vonigo.com/api/v1/resources/zips/?securityToken='+ tokenGenerated + '&pageNo=1&pageSize=50'\n\n    if(tokenGenerated){\n      axios.get(zipCodeEndPoint)\n            .then(res => {\n              if(res.data !== null){\n                setZips(res.data.Zips)\n              }\n              setLoad(true);\n            })\n            .catch(err => {\n                setError(err.message);\n                setLoad(true)\n            });\n    }\n  }, [tokenGenerated]);\n\n  switch (step) {\n    case 1:\n      return (\n        <FormUserDetails\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n          franchises={franchises}\n          zipCodes={zips}\n          serviceTypes={serviceTypes}\n          setServiceTypes={setServiceTypes}\n          setResetCalendars={setResetCalendars}\n        />\n      );\n    case 2:\n      return (\n        <FormToteDetails\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n          prevStep={prevStep}\n          serviceTypes={serviceTypes}\n          setServiceTypes={setServiceTypes}\n          resetCalendars={resetCalendars}\n          setResetCalendars={setResetCalendars}\n        />\n      );\n    case 3:\n      return (\n        <Scheduling\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n          prevStep={prevStep}\n        />\n      );\n    case 4:\n      return (\n        <AddressFormStep\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n          prevStep={prevStep}\n        />\n      );\n    case 5:\n      return (\n        <Confirm \n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep} \n          prevStep={prevStep} \n        />\n      );\n    default:\n      return <Success />;\n  }\n};\n","import React from 'react';\nimport { UserForm } from './components/UserForm';\nimport 'react-credit-cards/lib/styles.scss'\nimport './App.scss';\n\nexport const App = () => {\n  return <UserForm />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FormProvider from './context/FormContext'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <FormProvider>\n        <App />\n    </FormProvider>\n, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/kt_logo_150.eea69254.png\";"],"sourceRoot":""}